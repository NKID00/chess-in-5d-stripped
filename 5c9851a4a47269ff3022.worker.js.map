{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/5d-chess-js/dist/5d-chess.js","components/Player/Notation/HighlightNotationWorker.js","../node_modules/webpack/buildin/global.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","arrayLikeToArray","minLen","toString","slice","constructor","Array","from","test","define","e","f","u","a","Error","code","length","require","$","safeAdd","x","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","b","md5ff","md5gg","md5hh","md5ii","binlMD5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","undefined","length8","charCodeAt","rstrMD5","rstrHMACMD5","data","hash","bkey","ipad","opad","concat","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","hexMD5","rawHMACMD5","k","hexHMACMD5","md5","string","raw","amd","this","global","performance","present","names","shift","dateNow","Date","now","getTime","navigationStart","timing","performanceNow","noConflict","conflict","self","window","boardFuncs","actions","fullBoard","actionNum","activeOnly","presentOnly","newActiveTimelinesOnly","promotionPieces","recurse","layer","totalMoves","totalLayers","totalIndex","moves","returnArr","moddedBoard","copy","newTimelineIsActive","positionIsLatest","move","recurseRes","nextLayer","j","currArr","push","minTimeline","maxTimeline","databaseHasBoard","db","compare","pieceFuncs","turnFuncs","parseFuncs","init","variant","toBoard","res","newTurn","setTurn","givenTimelineIndex","givenTurnIndex","turnMade","isArray","positionExists","start","dest","destPiece","Math","abs","secondNewTurn","newTimeline","src2","dest2","destPiece2","pos","active","activeTimelines","lowestTurn","currMax","spatialOnly","presentTimelines","getMovesFromTimelines","currTimeline","latestTurn","piece","positionIsAttacked","player","pos2","pos3","curBoard","movePos","moveVecs","rPos","fPos","curPiece","rMove","fMove","compPiece","isTurnZero","hasZeroIndex","timeline","isEvenTimeline","isNormalCastling","hasNonNormalCastling","currTurn","firstFullBoard","secondFullBoard","timelines","pgnFuncs","board","tmp","JSON","parse","err","startingBoard","startingActionNum","split","map","trim","filter","startsWith","join","toActionHistory","action","toAction","inputted","toMove","TO_FEN","FROM_FEN","OMMIT_UNMOVED","toFen","turnObj","turn","blanks","row","unmoved","floor","fromFen","width","height","endsWith","rows","raw_row","match","exec","reversedTurn","isNaN","zeroSum","rank","hashBoard","actionFuncs","convertFuncs","copyFuncs","fenFuncs","hashFuncs","printFuncs","mateFuncs","metadataFuncs","validateFuncs","Chess","checkmateTimeout","skipDetection","enableConsole","checkmateCache","metadata","rawPromotionPieces","import","lookupVariant","reset","newInstance","state","assign","rawAction","rawStartingAction","rawBoardHistory","rawBoard","rawActionHistory","rawMoveBuffer","input1","input2","board1","board2","move1","move2","moveCompare","availablePromotionPieces","actionsRequired","strToObj","promotions","fromChar","fen","submit","console","error","log","firstBoard","size","includes","replace","line","inCheckmate","inStalemate","blankAction","pass","format","fromMove","actionable","fromAction","stringify","moveable","pgnStr","moveGen","inCheck","submittable","tmpBuffer","pop","tmpBoard","undo","checks","check","latestBoard","checkmate","stalemate","objToStr","suffixArr","fromActionHistory","ceil","rawMove","printBoard","fromBoard","export","variantDict","v","shortName","detectionOnly","pieceColor","absDestPiece","maxTime","recurseResult","tmpChecks","checkSig","sig","sort","flat","nodeSort","n1","n2","moveTreeIndex","moveTree","currNode","tmpMoveTree","tmpCheckSig","e1","e2","tmpMoveNode","splice","str","strArr","obj","regex","toLowerCase","keys","toUpperCase","substr","lookupVariantFull","variantPrettyStr","toLocaleLowerCase","variantStr","toPosition","positionObj","file","fromPosition","position","coordinate","toSanCoord","moveObj","end","promotion","enPassant","castling","toChar","realEnd","currMinT","currMaxT","newMinT","newMaxT","actionObj","toPiece","pieceObj","hasMoved","fromPiece","toTurn","pieces","fromTurn","toTimeline","timelineObj","maxTurnNumber","turns","currTurnNumber","newTurnNumber","fromTimeline","boardObj","maxTimelineNumber","newTimelineNumber","point","fromSanCoord","Number","ambiguousSan","src","sameRank","sameFile","possibleMove","compareMove","currSrc","currDest","suffix","timelineActivationToken","newTimelineToken","superPhysicalToken","isSingleTimeline","isTimelineTravel","isTimeTravel","isPromotion","isJump","isPresentMoving","isBranching","newActivePresent","excludeActive","newActive","actives","tmpActives","srcSP","destSP","srcPiece","isCapturing","pieceChar","promotionPieceChar","moveStr","orgMoveStr","srcSPArr","srcL","srcT","srcP","destSPArr","destL","destT","destP","coordArr","promotionChar","conflictMoves","actionStr","tmpStr","splitArr","currMove","actionHistory","delimiter","tmpActionNum","actionHistoryStr","done","match1","match2","substring","index","currAction","displayPawn","absPiece","char","opponentPiece","timelineMove","sourceTimelineIndex","timelineMoveVector","givenPiece","givenPieceTimeline","givenPieceTurn","givenPieceRank","givenPieceFile","forward","promotionRank","promotionPiece","rPosDouble","enPassantMovement","curMove","opponentTimelineCapture","dl","dt","dy","dx","spatialLength","spatial","lMove","tMove","curRank","notInCheck","rightOnePos","rightTwoPos","leftOnePos","leftTwoPos","isPositionAttacked","rPosEn","turnArray","blankTurnArray","boardArray","offset","printStr","array","fillBoard","newBoard","notation","regexRegular","regexCastling","extractHighlightNotation","notationArr","highlightNotation","chess","currTmpChess","tmpNotationArr","currTmpNotation","g","Function","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","iterator","_arr","_n","_d","_e","_s","_i","next","arr2","TypeError","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","allowArrayLike","it","F","normalCompletion","didErr","step","_e2"],"mappings":"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","file":"5c9851a4a47269ff3022.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chess = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n/* eslint-disable strict */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Add integers, wrapping at 2^32.\n   * This uses 16-bit operations internally to work around bugs in interpreters.\n   *\n   * @param {number} x First integer\n   * @param {number} y Second integer\n   * @returns {number} Sum\n   */\n  function safeAdd(x, y) {\n    var lsw = (x & 0xffff) + (y & 0xffff)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xffff)\n  }\n\n  /**\n   * Bitwise rotate a 32-bit number to the left.\n   *\n   * @param {number} num 32-bit number\n   * @param {number} cnt Rotation count\n   * @returns {number} Rotated number\n   */\n  function bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} q q\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n  }\n\n  /**\n   * Calculate the MD5 of an array of little-endian words, and a bit length.\n   *\n   * @param {Array} x Array of little-endian words\n   * @param {number} len Bit length\n   * @returns {Array<number>} MD5 Array\n   */\n  function binlMD5(x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << len % 32\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /**\n   * Convert an array of little-endian words to a string\n   *\n   * @param {Array<number>} input MD5 Array\n   * @returns {string} MD5 string\n   */\n  function binl2rstr(input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)\n    }\n    return output\n  }\n\n  /**\n   * Convert a raw string to an array of little-endian words\n   * Characters >255 have their high-byte silently ignored.\n   *\n   * @param {string} input Raw input string\n   * @returns {Array<number>} Array of little-endian words\n   */\n  function rstr2binl(input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32\n    }\n    return output\n  }\n\n  /**\n   * Calculate the MD5 of a raw string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrMD5(s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /**\n   * Calculates the HMAC-MD5 of a key and some data (raw strings)\n   *\n   * @param {string} key HMAC key\n   * @param {string} data Raw input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrHMACMD5(key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5c5c5c5c\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /**\n   * Convert a raw string to a hex string\n   *\n   * @param {string} input Raw input string\n   * @returns {string} Hex encoded string\n   */\n  function rstr2hex(input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n    }\n    return output\n  }\n\n  /**\n   * Encode a string as UTF-8\n   *\n   * @param {string} input Input string\n   * @returns {string} UTF8 string\n   */\n  function str2rstrUTF8(input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /**\n   * Encodes input string as raw MD5 string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawMD5(s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  /**\n   * Encodes input string as Hex encoded string\n   *\n   * @param {string} s Input string\n   * @returns {string} Hex encoded string\n   */\n  function hexMD5(s) {\n    return rstr2hex(rawMD5(s))\n  }\n  /**\n   * Calculates the raw HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawHMACMD5(k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  /**\n   * Calculates the Hex encoded HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function hexHMACMD5(k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  /**\n   * Calculates MD5 value for a given string.\n   * If a key is provided, calculates the HMAC-MD5 value.\n   * Returns a Hex encoded string unless the raw argument is given.\n   *\n   * @param {string} string Input string\n   * @param {string} [key] HMAC key\n   * @param {boolean} [raw] Raw output switch\n   * @returns {string} MD5 output\n   */\n  function md5(string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n})(this)\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n(function (global){(function (){\nvar performance = global.performance || {};\n\nvar present = (function () {\n  var names = ['now', 'webkitNow', 'msNow', 'mozNow', 'oNow'];\n  while (names.length) {\n    var name = names.shift();\n    if (name in performance) {\n      return performance[name].bind(performance);\n    }\n  }\n\n  var dateNow = Date.now || function () { return new Date().getTime(); };\n  var navigationStart = (performance.timing || {}).navigationStart || dateNow();\n  return function () {\n    return dateNow() - navigationStart;\n  };\n}());\n\npresent.performanceNow = performance.now;\npresent.noConflict = function () {\n  performance.now = present.performanceNow;\n};\npresent.conflict = function () {\n  performance.now = present;\n};\npresent.conflict();\n\nmodule.exports = present;\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\nconst boardFuncs = require('./board');\n\nexports.actions = (fullBoard, actionNum, activeOnly = true, presentOnly = true, newActiveTimelinesOnly = true, promotionPieces = null) => {\n\n  const recurse = (fullBoard, actionNum, layer = 0, totalMoves = 0, totalLayers = 0, totalIndex = []) => {\n    const moves = boardFuncs.moves(fullBoard, actionNum, activeOnly, presentOnly, promotionPieces);\n    let returnArr = [];\n\n    for (let i = 0; i < moves.length; i++) {\n      const moddedBoard = boardFuncs.copy(fullBoard);\n\n      if (newActiveTimelinesOnly && (!newActiveTimelinesOnly || (!this.newTimelineIsActive(moddedBoard, actionNum) && (this.newTimelineIsActive(moddedBoard, actionNum) || !boardFuncs.positionIsLatest(moddedBoard, moves[i][1]))))) continue;\n\n      boardFuncs.move(moddedBoard, moves[i]);\n      totalMoves++;\n\n      if (boardFuncs.present(moddedBoard, actionNum).length > 0) {\n        totalIndex[layer] = i;\n\n        const recurseRes = recurse(moddedBoard, actionNum, layer + 1, totalMoves, totalLayers, totalIndex);\n        const nextLayer = recurseRes[0];\n\n        totalMoves = recurseRes[1];\n        totalLayers = recurseRes[2] > layer ? recurseRes[2] : layer;\n        totalIndex = recurseRes[3];\n\n        for (let j = 0; j < nextLayer.length; j++) {\n          let currArr = [moves[i]];\n\n          for (let k = 0; k < nextLayer[j].length; k++) {\n\n            currArr.push(nextLayer[j][k]);\n\n          }\n\n          returnArr.push(currArr);\n        }\n\n        if (nextLayer.length === 0) returnArr.push([moves[i]]);\n\n      }\n      else {\n\n        returnArr.push([moves[i]]);\n      }\n\n    }\n\n    return [returnArr, totalMoves, totalLayers, totalIndex];\n  }\n\n  return recurse(fullBoard, actionNum)[0];\n}\n\nexports.move = (fullBoard, moves) => {\n  for (const move of moves) {\n    boardFuncs.move(fullBoard, move);\n  }\n}\n\nexports.newTimelineIsActive = (fullBoard, actionNum) => {\n  let minTimeline = 0;\n  let maxTimeline = 0;\n\n  for (let l = 0; fullBoard && l < fullBoard.length; l++) {\n\n    if (!fullBoard[l]) continue;\n\n    if (minTimeline < l && l % 2 !== 0) minTimeline = l;\n\n    if (maxTimeline < l && l % 2 === 0) maxTimeline = l;\n\n  }\n\n  if (actionNum % 2 === 0) return (minTimeline + 1) >= maxTimeline;\n\n  return (minTimeline + 1) <= maxTimeline;\n}\n\nexports.databaseHasBoard = (fullBoard, db) => {\n  for (let i = 0; i < db.length; i++) {\n    const comparison = boardFuncs.compare(fullBoard, db[i]);\n\n    if (comparison == 0) return true;\n\n  }\n\n  db.push(boardFuncs.copy(fullBoard));\n  return false;\n}\n\n},{\"./board\":5}],5:[function(require,module,exports){\nconst pieceFuncs = require('./piece');\nconst turnFuncs = require('./turn');\nconst parseFuncs = require('./parse');\n\nexports.init = (variant) => {\n  switch (variant) {\n    case 'defended_pawn':\n      return [[[\n        [-8, -10, -4, -6, -12, -4, -6, -8],\n        [-2, -2, -2, -2, -2, -2, -2, -2],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [-1, -1, -1, -1, -1, -1, -1, -1],\n        [-7, -9, -3, -5, -11, -3, -5, -7]\n      ]]];\n    case 'half_reflected':\n      return [[[\n        [-8, -6, -4, -10, -12, -4, -6, -8],\n        [-2, -2, -2, -2, -2, -2, -2, -2],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [-1, -1, -1, -1, -1, -1, -1, -1],\n        [-7, -5, -3, -11, -9, -3, -5, -7]\n      ]]];\n    case 'princess':\n      return [[[\n        [-8, -6, -4, -14, -12, -4, -6, -8],\n        [-2, -2, -2, -2, -2, -2, -2, -2],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [-1, -1, -1, -1, -1, -1, -1, -1],\n        [-7, -5, -3, -13, -11, -3, -5, -7]\n      ]]];\n    case 'reversed_royalty':\n      return [[[\n        [-8, -6, -4, -20, -18, -4, -6, -8],\n        [-2, -2, -2, -2, -2, -2, -2, -2],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [-1, -1, -1, -1, -1, -1, -1, -1],\n        [-7, -5, -3, -19, -17, -3, -5, -7]\n      ]]];\n    case 'turn_zero':\n      return [[\n        null,\n        [\n          [-8, -6, -4, -10, -12, -4, -6, -8],\n          [-2, -2, -2, -2, -2, -2, -2, -2],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [-1, -1, -1, -1, -1, -1, -1, -1],\n          [-7, -5, -3, -9, -11, -3, -5, -7]\n        ],\n        [\n          [-8, -6, -4, -10, -12, -4, -6, -8],\n          [-2, -2, -2, -2, -2, -2, -2, -2],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [-1, -1, -1, -1, -1, -1, -1, -1],\n          [-7, -5, -3, -9, -11, -3, -5, -7]\n        ]\n      ]];\n    case 'two_timelines':\n      return [\n        null,\n        [[\n          [-8, -6, -4, -10, -12, -4, -6, -8],\n          [-2, -2, -2, -2, -2, -2, -2, -2],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [-1, -1, -1, -1, -1, -1, -1, -1],\n          [-7, -5, -3, -9, -11, -3, -5, -7]\n        ]],\n        [[\n          [-8, -6, -4, -10, -12, -4, -6, -8],\n          [-2, -2, -2, -2, -2, -2, -2, -2],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0],\n          [-1, -1, -1, -1, -1, -1, -1, -1],\n          [-7, -5, -3, -9, -11, -3, -5, -7]\n        ]]\n      ];\n    case 'custom':\n      return [];\n    case typeof variant === 'object':\n      return parseFuncs.toBoard(variant);\n    default:\n      return [[[\n        [-8, -6, -4, -10, -12, -4, -6, -8],\n        [-2, -2, -2, -2, -2, -2, -2, -2],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0],\n        [-1, -1, -1, -1, -1, -1, -1, -1],\n        [-7, -5, -3, -9, -11, -3, -5, -7]\n      ]]];\n\n  }\n}\n\nexports.copy = (fullBoard) => {\n\n  let res = [];\n\n  //go trough the timelines of the game\n  for (let l = 0; fullBoard && l < fullBoard.length; l++) {\n\n    // make result the same size as board with no values\n    if (fullBoard[l]) res[l] = [];\n\n    // go through each board in the current timeline\n    for (let t = 0; fullBoard[l] && t < fullBoard[l].length; t++) {\n\n      // make result the same size as board with no values\n      if (fullBoard[l][t]) res[l][t] = [];\n\n      // create a copy of the current turn\n      const newTurn = turnFuncs.copy(fullBoard, l, t);\n\n      // add the copied turn\n      this.setTurn(res, l, t, newTurn);\n    }\n  }\n  return res;\n}\n\n// I hate this function because it literally uses the one thing you shouldn't to work (using an object pointer and mutating the data from a different place instead of returning the changed data and assigning the object to it)\n// But I can't think of a better way to make a deep copy of the data without doing this :(\nexports.setTurn = (fullBoard, givenTimelineIndex, givenTurnIndex, turnMade) => {\n  //Function to set small board/turn for full board. Used to avoid PACKED -> HOLEY element transition on v8 engine.\n  fullBoard = !Array.isArray(fullBoard) ? [] : fullBoard\n\n  // go through every timeline\n  for (let l = 0; l <= givenTimelineIndex; l++) {\n\n    // if the timeline we are on is the given timeline\n    if (l == givenTimelineIndex) {\n\n      fullBoard[l] = !Array.isArray(fullBoard[l]) ? [] : fullBoard[l]\n\n      // go through all of the turns in the current timeline\n      for (let t = 0; t <= givenTurnIndex; t++) {\n\n        // if the turn we are on is the given turn\n        if (t == givenTurnIndex) fullBoard[l][t] = turnMade;\n\n        // if the turn we are on is not a turn\n        if (t < fullBoard[l].length && typeof t != 'undefined') continue;\n\n        fullBoard[l][t] = null;\n\n      }\n    }\n\n    // if the timeline we are on is not a timeline\n    if (l < fullBoard.length && typeof fullBoard[l] != 'undefined') continue;\n\n    fullBoard[l] = null;\n  }\n}\n\n// I hate this function because it literally uses the one thing you shouldn't to work (using an object pointer and mutating the data from a different place instead of returning the changed data and assigning the object to it)\n// But I can't think of a better way to make a deep copy of the data in a way that it doesn't happen :(\nexports.move = (fullBoard, moves) => {\n  // position validation \n  if (this.positionExists(fullBoard, moves[0]) && this.positionIsLatest(fullBoard, moves[0])) {\n    const start = moves[0];\n    const dest = moves[1];\n\n    let newTurn = turnFuncs.copy(fullBoard, start[0], start[1]);\n\n    const destPiece = dest[4] ? dest[4] : Math.abs(newTurn[start[2]][start[3]]);\n\n    if (destPiece !== undefined && destPiece !== 0) {\n\n      newTurn[start[2]][start[3]] = 0;\n\n      if (dest != undefined) {\n\n        if (dest[0] === start[0] && dest[1] === start[1]) {\n\n          newTurn[dest[2]][dest[3]] = destPiece;\n        } else {\n\n          let secondNewTurn = turnFuncs.copy(fullBoard, dest[0], dest[1]);\n\n          secondNewTurn[dest[2]][dest[3]] = destPiece;\n\n          if ((fullBoard[dest[0]].length - 1) === dest[1]) {\n\n            this.setTurn(fullBoard, dest[0], dest[1] + 1, secondNewTurn);\n          } else {\n            let newTimeline = 0;\n\n            for (let i = 1; i < fullBoard.length; i++) {\n\n              if ((typeof fullBoard[i] === 'undefined' || fullBoard[i] === null) || (i % 2) != (dest[1] % 2)) continue;\n\n              newTimeline = (newTimeline < i) ? i : newTimeline\n            }\n\n            if (newTimeline === 0) {\n\n              fullBoard[(dest[1] % 2) === 0 ? 2 : 1] = [];\n\n              this.setTurn(fullBoard, (dest[1] % 2) === 0 ? 2 : 1, dest[1] + 1, secondNewTurn);\n            }\n            else {\n\n              fullBoard[newTimeline + 2] = [];\n\n              this.setTurn(fullBoard, newTimeline + 2, dest[1] + 1, secondNewTurn);\n            }\n          }\n        }\n      }\n\n      this.setTurn(fullBoard, start[0], start[1] + 1, newTurn);\n    }\n\n    if (moves[2] != undefined) {\n\n      const src2 = moves[2];\n\n      if (moves[3] != undefined) {\n\n        const dest2 = moves[3];\n\n        const destPiece2 = dest2[4] ? dest2[4] : Math.abs(fullBoard[src2[0]][src2[1]][src2[2]][src2[3]]);\n\n        if (dest2 != undefined) {\n\n          fullBoard[dest2[0]][dest2[1] + 1][dest2[2]][dest2[3]] = destPiece2;\n\n        }\n      }\n\n      fullBoard[src2[0]][src2[1] + 1][src2[2]][src2[3]] = 0;\n    }\n  }\n}\n\nexports.positionExists = (fullBoard, pos) => {\n  return fullBoard[pos[0]] && fullBoard[pos[0]][pos[1]] && pos[2] >= 0 &&\n    pos[2] < fullBoard[pos[0]][pos[1]].length &&\n    pos[3] >= 0 && pos[3] < fullBoard[pos[0]][pos[1]][pos[2]].length\n\n}\n\nexports.positionIsLatest = (fullBoard, pos) => {\n\n  return this.positionExists(fullBoard, pos) && (fullBoard[pos[0]].length - 1) === pos[1]\n\n}\n\nexports.active = (fullBoard) => {\n  let res = [];\n  let minTimeline = 0;\n  let maxTimeline = 0;\n\n  // go trough all timelines\n  for (let l = 0; l < fullBoard.length; l++) {\n\n    // if the timeline exists\n    if (!fullBoard[l]) continue;\n\n    //get the earliest timeline that isn't null\n    minTimeline = (minTimeline < l && l % 2 != 0) ? l : minTimeline\n\n    //get the latest timeline that isn't null\n    maxTimeline = (maxTimeline < l && l % 2 == 0) ? l : maxTimeline\n\n  }\n\n  // go trough all timelines\n  for (let l = 0; l < fullBoard.length; l++) {\n\n    // if the timeline exists\n    if (!fullBoard[l]) continue;\n\n    if (maxTimeline + 1 >= l && l % 2 != 0) res.push(l);\n\n    if (minTimeline + 3 >= l && l % 2 == 0) res.push(l);\n\n  }\n\n  return res;\n}\n\nexports.present = (fullBoard, actionNum) => {\n  const activeTimelines = this.active(fullBoard);\n  let res = [];\n  let lowestTurn = -1;\n\n  // go through all active timelines\n  for (let i = 0; i < activeTimelines.length; i++) {\n    let currMax = -1;\n\n    // go trough the boards on each active timeline\n    for (let t = 0; t < fullBoard[activeTimelines[i]].length; t++) {\n\n      // set the currMax to the maximum board id in each timeline\n      currMax = (fullBoard[activeTimelines[i]][t] && currMax < t && actionNum % 2 === t % 2) ? t : currMax;\n\n    }\n\n    lowestTurn = (currMax != -1 && (lowestTurn === -1 || lowestTurn > currMax)) ? currMax : lowestTurn\n  }\n\n  if (lowestTurn >= 0) {\n\n    // go through all active timelines\n    for (let i = 0; i < activeTimelines.length; i++) {\n      let currMax = 0;\n\n      // go trough the boards on each active timeline\n      for (let t = 0; t < fullBoard[activeTimelines[i]].length; t++) {\n\n        // set currMax equal to the minimum board index\n        currMax = (fullBoard[activeTimelines[i]][t] && currMax < t) ? t : currMax;\n\n      }\n\n      if (lowestTurn === currMax) res.push(activeTimelines[i]);\n\n      if (lowestTurn > currMax) return [];\n    }\n  }\n\n  return res;\n}\n\nexports.moves = (fullBoard, actionNum, activeOnly = true, presentOnly = true, spatialOnly = false, promotionPieces = null) => {\n\n  let res = [];\n\n  //if all moves come from only present timelines\n  if (presentOnly) {\n    // get all of the present timelines\n    const presentTimelines = this.present(fullBoard, actionNum);\n    return res = this.getMovesFromTimelines(fullBoard, presentTimelines, actionNum, spatialOnly, promotionPieces, res);\n\n  }\n  // if the moves come from only active timelines\n  if (activeOnly) {\n    // get all active timelines\n    const activeTimelines = this.active(fullBoard);\n    return res = this.getMovesFromTimelines(fullBoard, activeTimelines, actionNum, spatialOnly, promotionPieces, res);\n\n  }\n\n  // same thing as the getMoveFromTimelines function but you have to validate timelines before getting the latestTurn\n  for (let l = 0; l < fullBoard.length; l++) {\n\n    const currTimeline = fullBoard[l];\n    if (!currTimeline) continue;\n\n    const latestTurn = currTimeline[currTimeline.length - 1];\n\n    if ((currTimeline.length - 1) % 2 !== actionNum % 2) continue;\n\n    for (let r = 0; latestTurn && r < latestTurn.length; r++) {\n\n      for (let f = 0; latestTurn[r] && f < latestTurn[r].length; f++) {\n\n        const piece = Math.abs(latestTurn[r][f]);\n\n        if (piece === 0 || piece % 2 !== actionNum % 2) continue;\n\n        const moves = pieceFuncs.moves(fullBoard, [l, currTimeline.length - 1, r, f], spatialOnly, promotionPieces);\n\n        for (let j = 0; j < moves.length; j++) {\n          res.push(moves[j]);\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.positionIsAttacked = (fullBoard, pos, player) => {\n  const pos2 = pos[2];\n  const pos3 = pos[3];\n  const curBoard = fullBoard[pos[0]][pos[1]];\n  const movePos = pieceFuncs.movePos(6); // Knight movement\n  const moveVecs = pieceFuncs.moveVecs(10); // Queen movement\n\n  // Knight\n  for (let i = 0; i < 8; i++) {\n    const rPos = pos2 + movePos[i][2];\n    const fPos = pos3 + movePos[i][3];\n\n    if (rPos < 0 || rPos >= curBoard.length || fPos < 0 || fPos >= curBoard[rPos].length) continue;\n\n    let curPiece = Math.abs(curBoard[rPos][fPos]);\n\n    if (curPiece !== 0 && curPiece - player === 5) return true;\n\n  }\n\n  // RF\n  for (let i = 0; i < 4; i++) {\n    const rMove = moveVecs[i][2];\n    const fMove = moveVecs[i][3];\n    let rPos = pos2 + rMove;\n    let fPos = pos3 + fMove;\n\n    if (rPos >= 0 && rPos < curBoard.length && fPos >= 0 && fPos < curBoard[rPos].length) {\n      let curPiece = Math.abs(curBoard[rPos][fPos]);\n\n      if (curPiece !== 0) {\n        const compPiece = curPiece - player;\n\n        if (curPiece % 2 === player) continue;\n\n        if ((compPiece >= 7 && compPiece <= 13) || compPiece === 17 || compPiece === 19) return true;\n      }\n\n      rPos += rMove;\n      fPos += fMove;\n\n      while (rPos >= 0 && rPos < curBoard.length && fPos >= 0 && fPos < curBoard[rPos].length) {\n        curPiece = Math.abs(curBoard[rPos][fPos]);\n\n        if (curPiece !== 0) {\n\n          if (curPiece % 2 !== player) {\n            const compPiece = curPiece - player;\n\n            if (compPiece === 7 || compPiece === 9 || compPiece === 13 || compPiece === 19) return true;\n          }\n          break;\n        }\n\n        rPos += rMove;\n        fPos += fMove;\n      }\n    }\n  }\n\n  // Diagonal\n  for (let i = 4; i < 8; i++) {\n    const rMove = moveVecs[i][2];\n    const fMove = moveVecs[i][3];\n    let rPos = pos2 + rMove;\n    let fPos = pos3 + fMove;\n\n    if (rPos >= 0 && rPos < curBoard.length && fPos >= 0 && fPos < curBoard[rPos].length) {\n      let curPiece = Math.abs(curBoard[rPos][fPos]);\n\n      if (curPiece !== 0) {\n        const compPiece = curPiece - player;\n\n        if (curPiece % 2 == player) continue;\n\n        if (compPiece === 5 || compPiece === 7 || compPiece === 21 || compPiece === 23) continue;\n\n        return true;\n      }\n\n      rPos += rMove;\n      fPos += fMove;\n\n      while (rPos >= 0 && rPos < curBoard.length && fPos >= 0 && fPos < curBoard[rPos].length) {\n        curPiece = Math.abs(curBoard[rPos][fPos]);\n\n        if (curPiece !== 0) {\n\n          if (curPiece % 2 !== player) {\n            const compPiece = curPiece - player;\n\n            if (compPiece === 3 || compPiece === 9 || compPiece === 13 || compPiece === 19) return true;\n          }\n          break;\n        }\n\n        rPos += rMove;\n        fPos += fMove;\n      }\n    }\n  }\n\n  return false;\n}\n\nexports.isTurnZero = (fullBoard) => {\n  //Checking if turn exists at the zero index\n  let hasZeroIndex = false;\n\n  if (!Array.isArray(fullBoard) || !fullBoard.length > 0) return false;\n\n  for (const timeline of fullBoard) {\n\n    if (!Array.isArray(timeline) || timeline.length < + 0) continue;\n\n    if (Array.isArray(timeline[0])) hasZeroIndex = true;\n\n  }\n  //Inverted, since turn zero is the lack of a zero index turn (i.e. first turn starts from the index of 1)\n  return !hasZeroIndex;\n\n}\n\nexports.isEvenTimeline = (fullBoard) => {\n\n  return (!Array.isArray(fullBoard) || !fullBoard.length > 0) || !Array.isArray(fullBoard[0])\n\n}\n\nexports.isNormalCastling = (fullBoard) => {\n  //Check if initial boards (not full board) can use O-O notation format\n  const isTurnZero = this.isTurnZero(fullBoard);\n  let hasNonNormalCastling = false;\n\n  if (Array.isArray(fullBoard) && fullBoard.length > 0) return false;\n\n  for (const timeline of fullBoard) {\n\n    if (Array.isArray(timeline) && timeline.length > 0) continue;\n\n    const currTurn = timeline[0];\n\n    currTurn = (isTurnZero) ? timeline[2] : currTurn;\n\n    if (!Array.isArray(currTurn)) continue;\n\n    if (currTurn[0][4] !== -12 || currTurn[7][4] !== -11) hasNonNormalCastling = true;\n  }\n  //Inverted, since normal castling means no initial board contains non-normal castling\n  return !hasNonNormalCastling;\n\n}\n\nexports.compare = (firstFullBoard, secondFullBoard) => {\n\n  if (Array.isArray(firstFullBoard)) {\n\n    if (Array.isArray(secondFullBoard) && firstFullBoard.length === secondFullBoard.length) return -1;\n\n    for (let l = 0; l < fullBoard.length; l++) {\n\n      if (Array.isArray(firstFullBoard[l])) {\n\n        if (!Array.isArray(secondFullBoard[l]) || firstFullBoard[l].length != secondFullBoard[l].length) return -1;\n\n        for (let t = 0; t < firstFullBoard[l].length; t++) {\n\n          if (Array.isArray(firstFullBoard[l][t])) {\n\n            if (!Array.isArray(secondFullBoard[l][t]) || firstFullBoard[l][t].length != secondFullBoard[l][t].length) return -1;\n\n            for (let r = 0; r < firstFullBoard[l][t].length; r++) {\n              if (Array.isArray(firstFullBoard[l][t][r])) {\n\n                if (Array.isArray(secondFullBoard[l][t][r]) || firstFullBoard[l][t][r].length != secondFullBoard[l][t][r].length) return -1;\n\n                for (let f = 0; f < firstFullBoard[l][t][r]; f++) {\n\n                  if (firstFullBoard[l][t][r][f] != undefined && secondFullBoard[l][t][r][f] != undefined) return 1;\n\n                  if (secondFullBoard[l][t][r][f] != undefined) return -1;\n\n                  if (firstFullBoard[l][t][r][f] != secondFullBoard[l][t][r][f]) return firstFullBoard[l][t][r][f] - secondFullBoard[l][t][r][f];\n                }\n              }\n\n              if (Array.isArray(secondFullBoard[l][t][r])) return 1;\n            }\n          }\n\n          if (Array.isArray(secondFullBoard[l][t])) return 1;\n        }\n      }\n\n      if (Array.isArray(secondFullBoard[l])) return 1;\n    }\n  }\n\n  if (Array.isArray(secondFullBoard)) return 1;\n\n  return 0;\n}\n\nexports.getMovesFromTimelines = (fullBoard, timelines, actionNum, spatialOnly, promotionPieces, res) => {\n  for (const timeline of timelines) {\n\n    //if a board exists in this timeline\n    if (!fullBoard[timeline]) continue;\n\n    const currTimeline = fullBoard[timeline];\n\n    const latestTurn = currTimeline[currTimeline.length - 1];\n\n    // if the previous players move is the current players move\n    if ((currTimeline.length - 1) % 2 != actionNum % 2) continue;\n\n    // go through all files on the latestTurn\n    for (let r = 0; r < latestTurn.length; r++) {\n      // go through all squares in every file\n      for (let f = 0; f < latestTurn[r].length; f++) {\n        const piece = Math.abs(latestTurn[r][f]);\n        const moves = pieceFuncs.moves(fullBoard, [timeline, currTimeline.length - 1, r, f], spatialOnly, promotionPieces);\n\n        // if there is a piece on the current square and currentPiece is the current player's piece\n        if (piece == 0 || piece % 2 != actionNum % 2) continue;\n\n        // add all possible moves the the results array\n        for (const move of moves) res.push(move);\n      }\n    }\n  }\n  return res;\n}\n\n},{\"./parse\":13,\"./piece\":15,\"./turn\":17}],6:[function(require,module,exports){\nrequire('module-alias/register');\n\nconst boardFuncs = require('./board');\nconst pgnFuncs = require('./pgn');\nconst parseFuncs = require('./parse');\nconst validateFuncs = require('./validate');\n\nexports.board = (input) => {\n  /*\n    Supported input:\n     - 4D Array (raw board)\n     - Board object\n     - JSON of either above\n  */\n  let res = [];\n  let tmp = input;\n\n  if (typeof input === 'string') {\n    // tmp = null;\n    try {\n      tmp = JSON.parse(input);\n    }\n    catch (err) { }\n  }\n\n  res = (Array.isArray(tmp)) ? boardFuncs.copy(tmp) : parseFuncs.toBoard(tmp);\n\n  return res;\n}\n\nexports.actions = (actions, startingBoard = [], startingActionNum = [], promotionPieces = null) => {\n  /*\n    Supported input:\n     - 2D Array of moves (raw or object)\n     - Array of action object\n     - JSON of either above\n     - Multiple actions as expressed in notation / pgn\n  */\n  let res = [];\n\n  if (typeof actions === 'string') {\n\n    actions = actions.split('\\n').map(e => e.trim()).filter(e => !e.startsWith('[') && e).join('\\n').trim();\n\n    let tmp = null;\n\n    try {\n      tmp = JSON.parse(actions);\n    } catch (err) { }\n\n    if (tmp == null) {\n\n      try {\n\n        tmp = pgnFuncs.toActionHistory(actions, startingBoard, startingActionNum, promotionPieces);\n\n        if (tmp.length <= 0 && actions.length > 0) {\n\n          tmp = null;\n\n          throw new Error('No pgn actions found');\n\n        }\n\n      } catch (err) {\n\n        throw new Error('Notation invalid and an error has occurred with string: ' + actions);\n\n      }\n    }\n\n    if(tmp !== null) {\n      actions = tmp;\n    }\n  }\n\n  if (Array.isArray(actions)) {\n    const board = boardFuncs.copy(startingBoard);\n    let actionNum = startingActionNum;\n\n    for (const action of actions) {\n\n      res.push(this.action(action, board, actionNum));\n\n      for (const move of action) {\n\n        boardFuncs.move(board, move);\n\n      }\n\n      actionNum++;\n    }\n  }\n\n  return res;\n}\n\nexports.action = (input, board = [], actionNum = 0, promotionPieces = null) => {\n  /*\n    Supported input:\n     - Array of moves (raw or object)\n     - Action object\n     - JSON of either above\n     - Single action as expressed in notation\n  */\n  const isTurnZero = boardFuncs.isTurnZero(board);\n  let res = [];\n\n  if (typeof input === 'string') {\n\n    let tmp = null;\n\n    try {\n      tmp = JSON.parse(input);\n    } catch (err) { }\n\n    if (tmp == null) {\n\n      try {\n\n        tmp = pgnFuncs.toAction(input, board, actionNum, promotionPieces);\n\n      } catch (err) {\n\n        throw new Error('Notation invalid and an error has occurred with string: ' + input);\n\n      }\n    }\n\n    if(tmp !== null) {\n      input = tmp;\n    }\n  }\n\n  if (!Array.isArray(input) && typeof input == 'object') {\n\n    input = input.moves;\n  }\n\n  if (Array.isArray(input)) {\n\n    if (input.length > 0 && !Array.isArray(input[0])) {\n\n      for (const inputted of input) {\n\n        res.push(parseFuncs.toMove(inputted, isTurnZero));\n      }\n\n    } else {\n      res = input;\n    }\n  }\n\n  return res;\n}\n\nexports.move = (input, board = [], actionNum = 0, promotionPieces = null) => {\n  /*\n    Supported input:\n     - Move (raw or object)\n     - JSON of either above\n     - Single move as expressed in notation\n  */\n  const isTurnZero = boardFuncs.isTurnZero(board);\n  let res = [];\n\n  if (typeof input === 'string') {\n\n    let tmp = null;\n\n    try {\n\n      tmp = JSON.parse(input);\n\n    } catch (err) { }\n\n    if (tmp == null) {\n\n      try {\n\n        tmp = pgnFuncs.toMove(input, board, actionNum, [], promotionPieces);\n\n      } catch (err) {\n\n        throw new Error('Notation invalid and an error has occurred with string: ' + input);\n\n      }\n    }\n\n    if(tmp !== null) {\n      input = tmp;\n    }\n  }\n\n  if (Array.isArray(input)) {\n\n    res = input;\n\n  } else if (typeof input === 'object') {\n\n    res = parseFuncs.toMove(input, isTurnZero);\n  }\n\n  return res;\n}\n},{\"./board\":5,\"./parse\":13,\"./pgn\":14,\"./validate\":18,\"module-alias/register\":2}],7:[function(require,module,exports){\nexports.move = (move) => {\n  let res = [];\n\n  for (let i = 0; i < move.length; i++) {\n    res.push(move[i].slice());\n  }\n\n  return res;\n}\n\nexports.action = (action) => {\n  let res = [];\n\n  for (let i = 0; i < action.length; i++) {\n    res.push(this.move(action[i]));\n  }\n\n  return res;\n}\n\nexports.actions = (actions) => {\n  let res = [];\n\n  for (let i = 0; i < actions.length; i++) {\n    res.push(this.action(actions[i]));\n  }\n\n  return res;\n}\n},{}],8:[function(require,module,exports){\n/*! # FEN Conversion utilities\n\n    This module contains a few functions allowing the conversion from/to 5DFEN.\n\n    The FEN format is described in [fen.ebnf](https://github.com/adri326/5dchess-notation/blob/master/fen.ebnf).\n*/\n\nexports.TO_FEN = ['', 'p', 'P', 'b', 'B', 'n', 'N', 'r', 'R', 'q', 'Q', 'k', 'K', 's', 'S', 'w', 'W', 'c', 'C', 'y', 'Y', 'u', 'U', 'd', 'D'];\nexports.FROM_FEN = {\n    'p': 1,\n    'P': 2,\n    'b': 3,\n    'B': 4,\n    'n': 5,\n    'N': 6,\n    'r': 7,\n    'R': 8,\n    'q': 9,\n    'Q': 10,\n    'k': 11,\n    'K': 12,\n    's': 13,\n    'S': 14,\n    'w': 15,\n    'W': 16,\n    'c': 17,\n    'C': 18,\n    'y': 19,\n    'Y': 20,\n    'u': 21,\n    'U': 22,\n    'd': 23,\n    'D': 24,\n};\nexports.OMMIT_UNMOVED = [\n    true,           //none\n    false, false,   //pawn\n    true, true,     //bishop\n    true, true,     //knight\n    false, false,   //rook\n    true, true,     //queen\n    false, false,   //king\n    true, true,     //princess\n    false, false,   //brawn\n    true, true,     //common king\n    true, true,     //royal queen\n    true, true,     //unicorn\n    true, true,     //dragon\n];\n\n/**\n    Converts a raw turn (`turn`) into a 5DFEN board string.\n**/\nexports.toFen = (turnObj, timeline, turn, isTurnZero = false, isEvenTimeline = false) => {\n    let blanks = 0;\n    let res = '';\n\n    for (let row = turnObj.length - 1; row >= 0; row--) {\n\n        for (let piece of turnObj[row]) {\n\n            if (piece == 0) {\n\n                blanks++;\n            } else if (blanks > 0) {\n\n                res += blanks.toString(10);\n\n                blanks = 0;\n            }\n\n            if (piece == 0) continue;\n\n            const unmoved = piece < 0;\n\n            piece = Math.abs(piece);\n\n            if (exports.TO_FEN[piece]) {\n\n                res += exports.TO_FEN[piece];\n\n            } else {\n                res += '?';\n            }\n\n            if (unmoved && !exports.OMMIT_UNMOVED[piece]) res += '*';\n        }\n\n        if (blanks > 0) {\n\n            res += blanks.toString(10);\n\n            blanks = 0;\n        }\n\n        res += '/';\n    }\n\n    res = res.slice(0, -1); // remove the last `/`\n\n    res += ':';\n\n    if (timeline % 2 == 1) {\n\n        timeline = -(timeline + 1) / 2;\n\n    } else {\n        timeline /= 2;\n    }\n\n    if (isEvenTimeline) {\n\n        if (timeline > 0) {\n\n            res += '+' + Math.floor(timeline - 1);\n\n        } else if (timeline < 0) {\n\n            res += '-' + Math.floor(-(timeline + 1));\n\n        } else {\n\n            res += '0';\n        }\n\n    } else {\n\n        if (timeline > 0) {\n\n            res += '+' + Math.floor(timeline);\n\n        } else if (timeline < 0) {\n\n            res += '-' + Math.floor(-timeline);\n\n        } else {\n\n            res += '0';\n        }\n    }\n\n    res += ':';\n\n    res += (isTurnZero) ? Math.floor(turn / 2) : Math.floor(turn / 2) + 1;\n\n    res += ':';\n\n    res += turn % 2 ? 'b' : 'w';\n\n    return `[${res}]`;\n}\n\n/**\n    Converts a 5DFEN board string into its corresponding internal board and position.\n**/\nexports.fromFen = (raw, width = 8, height = 8, isTurnZero = false, isEvenTimeline = false) => {\n\n    if (typeof raw != 'string') {\n\n        throw new Error(\"TypeError: expected argument `raw` to be of type `string`, got: \" + typeof raw);\n    }\n\n    if (raw.startsWith('[') && raw.endsWith(']')) raw = raw.slice(1, -1);\n\n    const split = raw.split(':');\n\n    if (split.length != 4) {\n\n        throw new Error(\"SyntaxError: raw 5DFEN board string doesn't have 4 fields.\");\n    }\n\n    const rows = split[0].split('/');\n\n    if (rows.length !== height) {\n\n        throw new Error(\"SyntaxError: the amount of rows isn't equal to the height of the board, did you forget a slash (/) or to set the `size` header?\");\n    }\n\n    let board = [];\n\n    for (let raw_row of rows) {\n        let row = [];\n\n        while (raw_row.length) {\n            let match;\n\n            if (match = /^\\d+/.exec(raw_row)) {\n\n                raw_row = raw_row.slice(match[0].length);\n\n                for (let n = 0; n < +match[0]; n++) row.push(0);\n\n            } else if (match = /^\\+?([a-zA-Z])(\\*?)/.exec(raw_row)) {\n                raw_row = raw_row.slice(match[0].length);\n\n                const piece = exports.FROM_FEN[match[1]];\n\n                if (!piece) throw new Error(`SyntaxError: invalid piece '${match[1]}'`);\n\n                row.push(match[2] ? -piece : piece);\n\n            } else {\n\n                throw new Error(`SyntaxError: unexpected character: '${raw_row[0]}'`)\n            }\n        }\n\n        if (row.length != width) {\n\n            throw new Error(\"SyntaxError: row doesn't have the right width, did you forget a slash (/) or to set the `size` header?\");\n        }\n\n        board.push(row);\n    }\n\n    let reversedTurn = [];\n\n    for (let i = board.length - 1; i >= 0; i--) {\n\n        reversedTurn.push(board[i]);\n\n    }\n\n    let l = (split[1] == '-0' || split[1] == '+0') ? 0 : +split[1]\n\n    if (isEvenTimeline) {\n\n        if (split[1] === '-0') {\n\n            l = -1;\n\n        } else if (split[1] === '+0') {\n\n            l = 1;\n\n        } else {\n\n            l = +split[1];\n\n            l = (l < 0) ? l-- : l++;\n\n        }\n    }\n\n    if (isNaN(l)) {\n\n        throw new Error(\"Invalid FEN timeline: \" + split[1]);\n\n    } else if (l < 0) {\n\n        l = -l * 2 - 1;\n\n    } else {\n\n        l *= 2;\n    }\n\n    let t = +split[2] * 2;\n\n    if (isNaN(t)) {\n\n        throw new Error(\"Invalid FEN turn: \" + split[2]);\n\n    }\n\n    if (isTurnZero) {\n\n        t += 2;\n    }\n\n    if (split[3] == 'w') {\n\n        t -= 2;\n\n    } else if (split[3] == 'b') {\n\n        t -= 1;\n\n    } else {\n\n        throw new Error(\"Invalid FEN color: \" + split[3]);\n    }\n\n    return [reversedTurn, l, t];\n}\n\n},{}],9:[function(require,module,exports){\nconst md5 = require('blueimp-md5');\n\nexports.hash = (fullBoard) => {\n  let res = '';\n\n  for (const timeline of fullBoard) {\n\n    if (timeline) {\n\n      for (const turn of timeline) {\n\n        if (turn) {\n          let zeroSum = 0;\n\n          for (const rank of turn) {\n            for (const file of rank) {\n              const piece = file;\n\n              if (piece == 0) {\n\n                zeroSum++;\n\n              } else {\n\n                if (zeroSum > 0) {\n\n                  res += '' + zeroSum;\n\n                  zeroSum = 0;\n\n                }\n\n                if (piece > 0) {\n\n                  res += String.fromCharCode(97 + piece);\n\n                } else {\n\n                  res += String.fromCharCode(67 + Math.abs(piece));\n                }\n              }\n            }\n          }\n        } else {\n\n          res += 'B';\n        }\n      }\n    } else {\n\n      res += 'A';\n    }\n  }\n\n  return md5(res);\n}\n\nexports.hashBoard = (fullBoard, timeline, turn) => {\n  const l = timeline;\n  const t = turn;\n  let res = '';\n\n  if (fullBoard[l][t]) {\n    let zeroSum = 0;\n\n    for (const rank of fullBoard[l][t]) {\n      for (const file of rank) {\n        const piece = file;\n\n        if (piece == 0) {\n\n          zeroSum++;\n\n        } else {\n\n          if (zeroSum > 0) {\n\n            res += '' + zeroSum;\n\n            zeroSum = 0;\n\n          }\n\n          if (piece > 0) {\n\n            res += String.fromCharCode(97 + piece);\n\n          } else {\n\n            res += String.fromCharCode(67 + Math.abs(piece));\n          }\n        }\n      }\n    }\n  } else {\n\n    res += 'B';\n  }\n\n  return md5(res);\n}\n},{\"blueimp-md5\":1}],10:[function(require,module,exports){\nrequire('module-alias/register');\nconst md5 = require('blueimp-md5');\n\nconst actionFuncs = require('./action');\nconst boardFuncs = require('./board');\nconst convertFuncs = require('./convert');\nconst copyFuncs = require('./copy');\nconst fenFuncs = require('./fen');\nconst hashFuncs = require('./hash');\nconst parseFuncs = require('./parse');\nconst pgnFuncs = require('./pgn');\nconst pieceFuncs = require('./piece');\nconst printFuncs = require('./print');\nconst mateFuncs = require('./mate');\nconst metadataFuncs = require('./metadata');\nconst turnFuncs = require('./turn');\nconst validateFuncs = require('./validate');\n\nclass Chess {\n  constructor(input, variant) {\n    this.raw = {\n      actionFuncs: actionFuncs,\n      boardFuncs: boardFuncs,\n      convertFuncs: convertFuncs,\n      fenFuncs: fenFuncs,\n      hashFuncs: hashFuncs,\n      mateFuncs: mateFuncs,\n      metadataFuncs: metadataFuncs,\n      parseFuncs: parseFuncs,\n      pgnFuncs: pgnFuncs,\n      pieceFuncs: pieceFuncs,\n      printFuncs: printFuncs,\n      turnFuncs: turnFuncs,\n      validateFuncs: validateFuncs\n    };\n\n    this.checkmateTimeout = 60000;\n    this.skipDetection = false;\n    this.enableConsole = false;\n    this.checkmateCache = [];\n    this.metadata = {\n      board: 'standard',\n      mode: '5D'\n    };\n\n    this.rawPromotionPieces = []; //TODO: Expose this variable as endpoint for getting available promotions options\n\n    if (typeof input != 'undefined') {\n      this.import(input, variant);\n    }\n    else {\n\n      if (typeof variant == 'string') {\n        this.metadata.board = metadataFuncs.lookupVariant(variant);\n        this.reset(this.metadata.board);\n      }\n      else if (typeof variant == 'object') {\n        this.metadata.board = 'custom';\n        this.reset(variant);\n      }\n      else {\n        this.reset();\n      }\n    }\n  }\n\n  copy() {\n    let newInstance = new Chess();\n\n    newInstance.state(this.state());\n\n    return newInstance;\n  }\n\n  state(state = null) {\n    if (state == null) {\n      let res = {}\n\n      res.checkmateTimeout = this.checkmateTimeout;\n      res.skipDetection = this.skipDetection;\n      res.enableConsole = this.enableConsole;\n      res.checkmateCache = this.checkmateCache.slice();\n      res.metadata = Object.assign({}, this.metadata);\n      res.rawAction = this.rawAction;\n      res.rawStartingAction = this.rawStartingAction;\n      res.rawBoardHistory = [];\n      for (let i = 0; i < this.rawBoardHistory.length; i++) {\n        res.rawBoardHistory.push(boardFuncs.copy(this.rawBoardHistory[i]));\n      }\n      res.rawBoard = boardFuncs.copy(this.rawBoard);\n      res.rawActionHistory = copyFuncs.actions(this.rawActionHistory);\n      res.rawMoveBuffer = copyFuncs.action(this.rawMoveBuffer);\n      res.rawPromotionPieces = this.rawPromotionPieces.slice();\n      return res;\n    }\n    else {\n      this.checkmateTimeout = state.checkmateTimeout;\n      this.skipDetection = state.skipDetection;\n      this.enableConsole = state.enableConsole;\n      this.checkmateCache = state.checkmateCache.slice();\n      this.metadata = Object.assign({}, state.metadata);\n      this.rawAction = state.rawAction;\n      this.rawStartingAction = state.rawStartingAction;\n      this.rawBoardHistory = [];\n      for (let i = 0; i < state.rawBoardHistory.length; i++) {\n        this.rawBoardHistory.push(boardFuncs.copy(state.rawBoardHistory[i]));\n      }\n      this.rawBoard = boardFuncs.copy(state.rawBoard);\n      this.rawActionHistory = copyFuncs.actions(state.rawActionHistory);\n      this.rawMoveBuffer = copyFuncs.action(state.rawMoveBuffer);\n      this.rawPromotionPieces = state.rawPromotionPieces.slice();\n    }\n  }\n\n  compare(input1, input2, type = 'board') {\n    switch (type) {\n\n      case 'board':\n        const board1 = convertFuncs.board(input1);\n        const board2 = convertFuncs.board(input2);\n        return boardFuncs.compare(board1, board2);\n\n      case 'move':\n        const move1 = convertFuncs.move(input1, this.rawBoard, this.rawAction, this.rawPromotionPieces);\n        const move2 = convertFuncs.move(input2, this.rawBoard, this.rawAction, this.rawPromotionPieces);\n        return mateFuncs.moveCompare(move1, move2);\n\n      default:\n        throw new Error('Type not supported, valid types are \\'board\\' and \\'move\\'.');\n    }\n  }\n\n  reset(variant) {\n    if (typeof variant == 'string') {\n      this.metadata.board = metadataFuncs.lookupVariant(variant);\n      this.rawBoard = boardFuncs.init(this.metadata.board);\n    }\n    else if (typeof variant == 'object') {\n      this.metadata.board = 'custom';\n      this.rawBoard = boardFuncs.init(variant);\n    }\n    else {\n      this.rawBoard = boardFuncs.init(this.metadata.board);\n    }\n\n    this.rawAction = 0;\n\n    if (typeof this.rawBoard[0] != 'undefined' && this.rawBoard[0] != null) {\n      this.rawAction = this.rawBoard[0].length % 2 == 0 ? 1 : 0;\n    }\n\n    this.rawStartingAction = this.rawAction;\n    this.rawBoardHistory = [boardFuncs.copy(this.rawBoard)];\n    this.rawActionHistory = [];\n    this.rawMoveBuffer = [];\n    this.rawPromotionPieces = pieceFuncs.availablePromotionPieces(this.rawBoard);\n  }\n\n  import(input, variant, actionsRequired = false) {\n    //Reset everything to \"Standard\" first\n    this.reset('standard');\n\n    if (typeof input == 'string') {\n\n      Object.assign(this.metadata, metadataFuncs.strToObj(input));\n\n      if (typeof this.metadata.board == 'string') {\n\n        this.reset(this.metadata.board);\n\n      } else {\n\n        this.reset(variant);\n      }\n\n    } else {\n      this.reset(variant);\n    }\n\n    if (this.metadata.promotions) {\n\n      this.rawPromotionPieces = [];\n\n      for (let promotions of this.metadata.promotions.split(',')) {\n\n        this.rawPromotionPieces.push(pieceFuncs.fromChar(promotions, 0));\n        this.rawPromotionPieces.push(pieceFuncs.fromChar(promotions, 1));\n      }\n    }\n\n    if (this.metadata.board == 'custom') {\n\n      this.fen(input);\n\n      if (typeof this.rawBoard[0] !== 'undefined' && this.rawBoard[0] !== null) {\n        this.rawAction = this.rawBoard[0].length % 2 === 0 ? 1 : 0;\n      }\n\n      this.rawStartingAction = this.rawAction;\n      this.rawBoardHistory = [boardFuncs.copy(this.rawBoard)];\n    }\n\n    try {\n      let actions = convertFuncs.actions(input, this.rawBoardHistory[0], this.rawStartingAction, this.rawPromotionPieces);\n\n      for (let i = 0; i < actions.length; i++) {\n        for (let j = 0; j < actions[i].length; j++) {\n          this.move(actions[i][j]);\n        }\n\n        if (i + 1 < actions.length) {\n          this.submit();\n        } else {\n\n          try {\n\n            this.submit();\n\n          } catch (err) {\n\n            if(this.enableConsole) {\n              console.error(err);\n              console.log('Last action is not complete, importing as move buffer.');\n            }\n          }\n        }\n      }\n    } catch (err) {\n      if(this.enableConsole) {\n        console.error(err);\n        if(!actionsRequired) {\n          console.log('Error importing actions, skipping...');\n        }\n      }\n      if(actionsRequired) {\n        throw err;\n      }\n    }\n  }\n\n  importable(input, variant, actionsRequired = false) {\n    try {\n      let newInstance = this.copy();\n\n      newInstance.import(input, variant, actionsRequired);\n\n      return true;\n    }\n    catch (err) { return false; }\n  }\n\n  fen(input, currentBoard = false) {\n    if (typeof input === 'string') {\n      // Read width and height\n      let width = 8;\n      let height = 8;\n\n      let match;\n\n      Object.assign(this.metadata, metadataFuncs.strToObj(input));\n\n      if (match = /^(\\d+)x(\\d+)$/.exec(this.metadata.size || \"\")) {\n\n        width = +match[1];\n        height = +match[2];\n      }\n\n      const isTurnZero = input.includes('0:b]') || input.includes('0:w]');\n      const isEvenTimeline = input.includes(':+0:') || input.includes(':-0:');\n\n      // Look for 5DFEN strings and parse them\n      for (let line of input.replace(/\\r\\n/g, '\\n').replace(/\\s*;\\s*/g, '\\n').split('\\n')) {\n\n        line = line.trim();\n\n        if (line.startsWith('[') && line.endsWith(']') && !/\\s/.exec(line)) {\n\n          let [turn, l, t] = fenFuncs.fromFen(line, width, height, isTurnZero, isEvenTimeline);\n\n          boardFuncs.setTurn(this.rawBoard, l, t, turn);\n        }\n      }\n    } else if (!currentBoard) {\n      const firstBoard = this.rawBoardHistory[0];\n      const isTurnZero = boardFuncs.isTurnZero(firstBoard);\n      const isEvenTimeline = boardFuncs.isEvenTimeline(firstBoard);\n      let res = '';\n\n      for (let l = 0; l < firstBoard.length; l++) {\n        for (let t = 0; firstBoard[l] && t < firstBoard[l].length; t++) {\n\n          if (firstBoard[l][t]) res += fenFuncs.toFen(firstBoard[l][t], l, t, isTurnZero, isEvenTimeline) + '\\n';\n\n        }\n      }\n\n      return res;\n\n    } else {\n      const isTurnZero = boardFuncs.isTurnZero(this.rawBoard);\n      const isEvenTimeline = boardFuncs.isEvenTimeline(this.rawBoard);\n      let res = '';\n\n      for (let l = this.rawBoard.length - 1; l > 0; l--) {\n\n        if (!this.rawBoard[l] || l % 2 == 0) continue;\n\n        for (let t = 0; t < this.rawBoard[l].length; t++) {\n\n          if (this.rawBoard[l][t]) res += fenFuncs.toFen(this.rawBoard[l][t], l, t, isTurnZero, isEvenTimeline) + '\\n';\n\n        }\n      }\n\n      for (let l = 0; l < this.rawBoard.length; l++) {\n\n        if (!this.rawBoard[l] || l % 2 != 0) continue;\n\n        for (let t = 0; t < this.rawBoard[l].length; t++) {\n\n          if (this.rawBoard[l][t]) res += fenFuncs.toFen(this.rawBoard[l][t], l, t, isTurnZero, isEvenTimeline) + '\\n';\n\n        }\n      }\n      return res;\n    }\n  }\n\n  fenable(input) {\n    try {\n      let newInstance = this.copy();\n\n      newInstance.fen(input);\n\n      return true;\n    }\n    catch (err) { return false; }\n  }\n\n  pass() {\n    if (!this.skipDetection) {\n\n      if (this.inCheckmate) throw new Error('Cannot submit, currently in checkmate.');\n\n      if (this.inStalemate) throw new Error('Cannot submit, currently in stalemate.');\n\n    }\n\n    mateFuncs.blankAction(this.rawBoard, this.rawAction);\n\n    this.submit();\n  }\n\n  passable() {\n    try {\n      let newInstance = this.copy();\n\n      newInstance.pass();\n\n      return true;\n    }\n    catch (err) { return false; }\n  }\n\n  action(input) {\n    const moves = convertFuncs.action(input, this.rawBoard, this.rawAction, this.rawPromotionPieces);\n\n    for (let i = 0; i < moves.length; i++) {\n      this.move(moves[i]);\n    }\n\n    this.submit();\n  }\n\n  actions(format = 'object', activeOnly = true, presentOnly = true, newActiveTimelinesOnly = true) {\n    const isTurnZero = boardFuncs.isTurnZero(this.rawBoard);\n    const actions = actionFuncs.actions(this.rawBoard, this.rawAction, activeOnly, presentOnly, newActiveTimelinesOnly, this.rawPromotionPieces);\n\n    if (format === 'raw') return actions;\n\n    if (format.includes('notation') || format.includes('5dpgn')) {\n      let res = '';\n\n      for (let i = 0; i < actions.length; i++) {\n\n        res += pgnFuncs.fromMove(\n          actions[i],\n          this.rawBoard,\n          this.rawAction,\n          '',\n          format.includes('active'),\n          format.includes('timeline'),\n          format.includes('superphysical')\n        ) + '\\n';\n\n      }\n      return res;\n    }\n\n    res = [];\n    for (let i = 0; i < actions.length; i++) {\n\n      if (this.skipDetection || this.actionable(actions[i])) {\n        res.push(parseFuncs.fromAction(this.rawBoard, this.rawAction, actions[i], isTurnZero));\n      }\n\n    }\n\n    if (format == 'json') return JSON.stringify(res);\n\n    return res;\n  }\n\n  actionable(input) {\n    try {\n      let newInstance = this.copy();\n\n      newInstance.action(input);\n\n      return true;\n    }\n    catch (err) { return false; }\n  }\n\n  move(input) {\n    const move = convertFuncs.move(input, this.rawBoard, this.rawAction, this.rawPromotionPieces);\n\n    if (!this.skipDetection && !this.moveable(move)) {\n\n      const pgnStr = 'Move is invalid and an error has occurred with this move: ' + move;\n\n      if(this.enableConsole) {\n        console.error(pgnStr);\n      }\n\n      throw new Error(pgnStr);\n\n    }\n\n    this.rawMoveBuffer.push(move);\n\n    boardFuncs.move(this.rawBoard, move);\n  }\n\n  moves(format = 'object', activeOnly = true, presentOnly = true, spatialOnly = false) {\n    const isTurnZero = boardFuncs.isTurnZero(this.rawBoard);\n\n    if (!this.skipDetection) {\n      if (this.inCheckmate || this.inStalemate) return [];\n    }\n\n    const moves = boardFuncs.moves(this.rawBoard, this.rawAction, activeOnly, presentOnly, spatialOnly, this.rawPromotionPieces);\n\n    if (format == 'raw') return moves;\n\n    if (format.includes('notation') || format.includes('5dpgn')) {\n      let res = '';\n\n      for (const move of moves) {\n\n        res += pgnFuncs.fromMove(\n          move,\n          this.rawBoard,\n          this.rawAction,\n          '',\n          format.includes('active'),\n          format.includes('timeline'),\n          format.includes('superphysical')\n        ) + '\\n';\n\n      }\n\n      return res;\n    }\n\n    let res = [];\n\n    for (const move of moves) {\n      res.push(parseFuncs.fromMove(this.rawBoard, move, isTurnZero));\n    }\n\n    if (format == 'json') return JSON.stringify(res);\n\n    return res;\n  }\n\n  moveable(input, moveGen = []) {\n    try {\n      if (this.skipDetection) return true;\n\n      const move = convertFuncs.move(input, this.rawBoard, this.rawAction, this.rawPromotionPieces);\n\n      return validateFuncs.move(this.rawBoard, this.rawAction, move, moveGen, this.rawPromotionPieces);\n\n    } catch (err) { return false; }\n  }\n\n  submit() {\n    if (!this.skipDetection) {\n\n      if (this.inCheckmate) throw new Error('Cannot submit, currently in checkmate.');\n\n      if (this.inStalemate) throw new Error('Cannot submit, currently in stalemate.');\n\n      if (this.inCheck) throw new Error('Cannot submit, currently in check.');\n\n    }\n\n    if (!this.submittable()) throw new Error('Action is not complete, more moves are needed');\n\n    this.rawBoardHistory.push(boardFuncs.copy(this.rawBoard));\n    this.rawActionHistory.push(copyFuncs.action(this.rawMoveBuffer));\n    this.rawMoveBuffer = [];\n    this.rawAction++;\n  }\n\n  submittable() {\n    if (!this.skipDetection) {\n\n      if (this.inCheckmate || this.inStalemate) return false;\n\n    }\n\n    if (this.inCheck) return false;\n\n    return boardFuncs.present(this.rawBoard, this.rawAction).length <= 0;\n  }\n\n  undo() {\n    if (this.rawMoveBuffer.length > 0) {\n      let tmpBuffer = copyFuncs.action(this.rawMoveBuffer);\n      tmpBuffer.pop();\n\n      const tmpBoard = boardFuncs.copy(this.rawBoardHistory[this.rawBoardHistory.length - 1]);\n\n      for (let i = 0; i < tmpBuffer.length; i++) {\n\n        if (!this.skipDetection) {\n\n          if (!validateFuncs.move(tmpBoard, this.rawAction, tmpBuffer[i], [], this.rawPromotionPieces)) {\n            const pgnStr = 'Undo buffer is corrupted and an error has occurred with this move: ' + pgnFuncs.fromMove(tmpBuffer[i], tmpBoard, this.rawAction);\n\n            if(this.enableConsole) {\n              console.error(pgnStr);\n            }\n\n            throw new Error(pgnStr);\n          }\n        }\n\n        boardFuncs.move(tmpBoard, tmpBuffer[i]);\n      }\n\n      this.rawBoard = boardFuncs.copy(tmpBoard);\n      this.rawMoveBuffer = copyFuncs.action(tmpBuffer);\n    } else {\n      throw new Error('No moves to undo.');\n    }\n  }\n\n  undoable() {\n    try {\n      this.copy().undo();\n\n      return true;\n    }\n    catch (err) { return false; }\n  }\n\n  checks(format = 'object') {\n    const isTurnZero = boardFuncs.isTurnZero(this.rawBoard);\n    const checks = mateFuncs.checks(this.rawBoard, this.rawAction, false);\n    const tmpBoard = boardFuncs.copy(this.rawBoard);\n\n    mateFuncs.blankAction(tmpBoard, this.rawAction);\n\n    if (format == 'raw') return checks;\n\n    if (format.includes('notation') || format.includes('5dpgn')) {\n      let res = '';\n\n      for (const check of checks) {\n        res += pgnFuncs.fromMove(\n          check,\n          tmpBoard,\n          this.rawAction,\n          format.includes('active'),\n          format.includes('timeline'),\n          format.includes('superphysical')\n        ) + '\\n';\n      }\n\n      return res;\n    }\n\n    let res = [];\n\n    for (const check of checks) {\n      res.push(parseFuncs.fromMove(tmpBoard, check, isTurnZero));\n    }\n\n    if (format === 'json') return JSON.stringify(res);\n\n    return res;\n  }\n\n  get inCheckmate() {\n    const latestBoard = this.rawBoardHistory[this.rawBoardHistory.length - 1];\n    const hash = hashFuncs.hash(latestBoard);\n\n    for (const checkmate of this.checkmateCache) {\n\n      if (hash == checkmate) return true;\n\n    }\n\n    let res = mateFuncs.checkmate(latestBoard, this.rawAction, this.checkmateTimeout);\n\n    if (res[0] && !res[1]) this.checkmateCache.push(hash);\n\n    return res[0];\n  }\n\n  get inCheck() {\n\n    return mateFuncs.checks(this.rawBoard, this.rawAction, true);\n\n  }\n\n  get inStalemate() {\n\n    const latestBoard = this.rawBoardHistory[this.rawBoardHistory.length - 1];\n\n    return mateFuncs.stalemate(latestBoard, this.rawAction, this.checkmateTimeout)[0];\n\n  }\n\n  get hash() {\n\n    return md5(this.fen(null, true).replace(/\\n/g, ''));\n\n  }\n\n  export(format = '5dpgn') {\n    const board = this.rawBoard;\n    const isTurnZero = boardFuncs.isTurnZero(board);\n\n    if (format == 'raw') return this.rawActionHistory;\n\n    if (format == 'json') {\n\n      return JSON.stringify(this.rawActionHistory.map((e, i) => {\n\n        return parseFuncs.fromAction(this.rawBoardHistory[i], i, e, isTurnZero);\n\n      }));\n    }\n\n    if (format == 'object') {\n\n      return this.rawActionHistory.map((e, i) => {\n\n        return parseFuncs.fromAction(this.rawBoardHistory[i], i, e, isTurnZero);\n\n      });\n    }\n\n    let res = '' + metadataFuncs.objToStr(this.metadata);\n\n    if (format.includes('notation') || format.includes('5dpgn')) {\n      if (this.metadata.board == 'custom') res += this.fen();\n\n      const suffixArr = []; //TODO implement check, checkmate, softmate\n\n      res += pgnFuncs.fromActionHistory(\n        this.rawActionHistory,\n        this.rawBoardHistory[0],\n        this.rawStartingAction,\n        format.includes('inline') ? ' ' : '\\n',\n        suffixArr,\n        format.includes('active'),\n        format.includes('timeline'),\n        format.includes('superphysical')\n      );\n    }\n\n    return res;\n  }\n\n  print() {\n    let res = ''\n    res += 'Current Player: ' + (this.rawAction % 2 === 0 ? 'White' : 'Black') + '\\n';\n    res += 'Action Number: ' + (Math.ceil(this.rawAction / 2) + 1) + '\\n';\n\n    if (this.rawMoveBuffer.length > 0) res += 'Move Stack:\\n';\n\n    for (const rawMove of this.rawMoveBuffer) {\n\n      res += '  ' + pgnFuncs.fromMove(rawMove, this.rawBoard, this.rawAction) + '\\n';\n\n    }\n\n    res += printFuncs.printBoard(this.rawBoard);\n\n    if(this.enableConsole) {\n      console.log(res);\n    }\n\n    return res;\n  }\n\n  print2() {\n    console.log('Current Player: ' + (this.rawAction % 2 === 0 ? 'White' : 'Black'));\n    console.log('Action Number: ' + (Math.ceil(this.rawAction / 2) + 1));\n\n    if (this.rawMoveBuffer.length > 0) console.log('Move Stack:');\n\n    for (const rawMove of this.rawMoveBuffer) {\n\n      console.log('  ' + pgnFuncs.fromMove(rawMove, this.rawBoard, this.rawAction));\n\n    }\n\n    console.log(printFuncs.printBoard(this.rawBoard));\n  }\n\n  get board() {\n\n    return parseFuncs.fromBoard(this.rawBoard, this.rawAction);\n\n  }\n\n  get actionNumber() {\n\n    return Math.floor(this.rawAction / 2) + 1;\n\n  }\n\n  get boardHistory() {\n    let res = [];\n\n    for (let i = 0; i < this.rawBoardHistory.length; i++) {\n\n      res.push(parseFuncs.fromBoard(this.rawBoardHistory[i], i));\n    }\n\n    return res;\n  }\n\n  get actionHistory() {\n\n    return this.export('object');\n\n  }\n\n  get moveBuffer() {\n    const isTurnZero = boardFuncs.isTurnZero(this.rawBoard);\n    const tmpBoard = boardFuncs.copy(this.rawBoardHistory[this.rawBoardHistory.length - 1]);\n    let res = [];\n\n    for (const rawMove of this.rawMoveBuffer) {\n\n      res.push(parseFuncs.fromMove(tmpBoard, rawMove, isTurnZero));\n\n      boardFuncs.move(tmpBoard, rawMove);\n\n    }\n\n    return res;\n  }\n\n  get player() {\n\n    return (this.rawAction % 2 == 0 ? 'white' : 'black');\n\n  }\n\n  get variants() {\n\n    return metadataFuncs.variantDict.map(v => {\n\n      return {\n        name: v[0],\n        shortName: v[1]\n      };\n\n    });\n  }\n}\n\nmodule.exports = Chess;\n\n},{\"./action\":4,\"./board\":5,\"./convert\":6,\"./copy\":7,\"./fen\":8,\"./hash\":9,\"./mate\":11,\"./metadata\":12,\"./parse\":13,\"./pgn\":14,\"./piece\":15,\"./print\":16,\"./turn\":17,\"./validate\":18,\"blueimp-md5\":1,\"module-alias/register\":2}],11:[function(require,module,exports){\nconst present = require('present');\nconst boardFuncs = require('./board');\nconst turnFuncs = require('./turn');\n\nexports.blankAction = (fullBoard, actionNum) => {\n  const presentTimelines = boardFuncs.present(fullBoard, actionNum);\n\n  for (const timeline of presentTimelines) {\n    const currTimeline = fullBoard[timeline];\n\n    if (!currTimeline) continue;\n\n    const newTurn = turnFuncs.copy(fullBoard, timeline, currTimeline.length - 1);\n\n    // let latestTurn = currTimeline[currTimeline.length - 1];\n    if ((currTimeline.length - 1) % 2 != actionNum % 2) continue;\n\n\n    fullBoard[timeline][currTimeline.length] = newTurn;\n  }\n}\n\nexports.checks = (fullBoard, actionNum, detectionOnly = false) => {\n  const tmpBoard = boardFuncs.copy(fullBoard);\n  const pieceColor = actionNum % 2;\n  let res = [];\n\n  this.blankAction(tmpBoard, actionNum); // ;-;\n\n  const moves = boardFuncs.moves(tmpBoard, actionNum + 1, false, false);\n\n  for (const move of moves) {\n    if (move.length === 2 && boardFuncs.positionExists(tmpBoard, move[1])) {\n      const absDestPiece = Math.abs(tmpBoard[move[1][0]][move[1][1]][move[1][2]][move[1][3]]);\n\n      if (\n        (\n          absDestPiece == 11 || absDestPiece == 12 // King\n          || absDestPiece == 19 || absDestPiece == 20 // Royal queen\n        ) && absDestPiece % 2 == pieceColor\n      ) {\n\n        if (detectionOnly) return true;\n\n        res.push(move);\n      }\n    }\n  }\n\n  if (detectionOnly) return false;\n\n  return res;\n}\n\nexports.checkmate = (fullBoard, actionNum, maxTime = 60000) => {\n  const inCheck = this.checks(fullBoard, actionNum, true);\n\n  if (!inCheck) return [false, false];\n\n  const start = present();\n\n  // Super fast single pass looking for moves solving checks\n  const moves = boardFuncs.moves(fullBoard, actionNum, false, false);\n\n  for (const move of moves) {\n    const tmpBoard = boardFuncs.copy(fullBoard);\n\n    boardFuncs.move(tmpBoard, move);\n\n    const inCheck = this.checks(tmpBoard, actionNum, true);\n\n    if (!inCheck) return [false, false];\n\n    if ((present() - start) > maxTime) return [true, true];\n  }\n\n  // Fast pass looking for moves solving checks using DFS\n  let recurse = (fullBoard, actionNum, checks = []) => {\n    const moves = boardFuncs.moves(fullBoard, actionNum, false, false);\n\n    if (checks.length <= 0) checks = this.checks(fullBoard, actionNum);\n\n    if (checks.length <= 0) return [false, false];\n\n    if ((present() - start) > maxTime) return [true, true];\n\n    for (const move of moves) {\n      const tmpBoard = boardFuncs.copy(fullBoard);\n\n      boardFuncs.move(tmpBoard, move);\n\n      const tmpChecks = this.checks(tmpBoard, actionNum);\n      const solvedACheck = tmpChecks.length < checks.length;\n\n      if (solvedACheck && !recurse(tmpBoard, actionNum, tmpChecks)[0]) {\n\n        return [false, false];\n      }\n    }\n\n    return [true, false];\n  }\n\n  const recurseResult = recurse(fullBoard, actionNum);\n\n  if (!recurseResult[0] || recurseResult[1]) return recurseResult;\n\n  const checkSig = (checks) => {\n    let res = {\n      length: checks.length,\n      sig: []\n    };\n\n    checks.sort(this.moveCompare);\n\n    res.sig = checks.flat(2);\n\n    return res;\n  };\n\n  let nodeSort = (n1, n2) => {\n\n    if (n1.checkSig.length != n2.checkSig.length) {\n\n      return n1.checkSig.length - n2.checkSig.length;\n    }\n\n    if (n1.checkSig.sig.length != n2.checkSig.sig.length) {\n\n      return n1.checkSig.sig.length - n2.checkSig.sig.length;\n    }\n\n    for (let i = 0; i < n1.checkSig.sig.length; i++) {\n      if (n1.checkSig.sig[i] == n2.checkSig.sig[i]) continue;\n\n      return n1.checkSig.sig[i] - n2.checkSig.sig[i];\n    }\n\n    return n1.board.length - n2.board.length;\n  };\n\n  // let exhausted = false;\n  let moveTreeIndex = 0;\n  let moveTree = [{\n    board: fullBoard,\n    checkSig: checkSig(this.checks(fullBoard, actionNum))\n  }];\n\n  //Slow BFS exhaustive search prioritizing check solving, check changing, then timeline changing moves\n  while (moveTreeIndex < moveTree.length) {\n\n    if ((present() - start) > maxTime) return [true, true];\n\n    const currNode = moveTree[moveTreeIndex];\n\n    if (currNode) {\n      const moves = boardFuncs.moves(currNode, actionNum, false, false);\n      let tmpMoveTree = [];\n\n      for (const move of moves) {\n        const tmpBoard = boardFuncs.copy(currNode);\n\n        boardFuncs.move(tmpBoard, move);\n\n        const tmpChecks = this.checks(tmpBoard, actionNum);\n\n        if (tmpChecks.length <= 0) return [false, false];\n\n        const tmpCheckSig = checkSig(tmpChecks);\n\n        tmpMoveTree.push({\n          board: tmpBoard,\n          checkSig: tmpCheckSig\n        });\n      }\n\n      tmpMoveTree.sort((e1, e2) => nodeSort(currNode, e2) - nodeSort(currNode, e1));\n\n      for (const tmpMoveNode of tmpMoveTree) {\n        moveTree.push(tmpMoveNode);\n      }\n\n      moveTree.splice(0, 1);\n\n      moveTreeIndex--;\n    }\n\n    moveTreeIndex++;\n  }\n\n  return [true, false];\n}\n\nexports.stalemate = (fullBoard, actionNum, maxTime = 60000) => {\n  //TODO: Add stalemate testing\n  const inCheck = this.checks(fullBoard, actionNum, true);\n  const start = present();\n  const moveTree = [fullBoard];\n\n  if (inCheck) return [false, false];\n\n  //DFS search for valid action\n  while (moveTree.length > 0) {\n\n    if ((present() - start) > maxTime) return [true, true];\n\n    const currNode = moveTree[0];\n\n    if (currNode) {\n      const moves = boardFuncs.moves(currNode, actionNum, false, false);\n\n      for (const move of moves) {\n        const tmpBoard = boardFuncs.copy(currNode);\n\n        boardFuncs.move(tmpBoard, move);\n\n        const inCheck = this.checks(tmpBoard, actionNum, true);\n\n        if (inCheck) continue;\n\n        const presentTimelines = boardFuncs.present(tmpBoard, actionNum);\n\n        if (presentTimelines.length <= 0) return [false, false];\n\n        moveTree.push(tmpBoard);\n      }\n    }\n\n    moveTree.splice(0, 1);\n  }\n\n  return [true, false];\n}\n\nexports.moveCompare = (move1, move2) => {\n\n  if (Array.isArray(move1)) {\n\n    if (!Array.isArray(move2)) return -1;\n\n    if (move1.length != move2.length) return move1.length - move2.length;\n\n\n    for (let i = 0; i < move1.length; i++) {\n\n      if (move1[i].length != move2[i].length) continue;\n\n      for (let j = 0; j < move1[i].length; j++) {\n\n        if (move1[i][j] != move2[i][j]) return move1[i][j] - move2[i][j];\n      }\n\n      return move1[i].length - move2[i].length;\n    }\n  }\n\n  if (Array.isArray(move2)) return 1;\n\n  return 0;\n}\n\n},{\"./board\":5,\"./turn\":17,\"present\":3}],12:[function(require,module,exports){\nconst variantDict = [\n  ['Standard', 'standard'],\n  ['Standard - Defended Pawn', 'defended_pawn'],\n  ['Standard - Half Reflected', 'half_reflected'],\n  ['Standard - Princess', 'princess'],\n  ['Standard - Turn Zero', 'turn_zero'],\n  ['Standard - Two Timelines', 'two_timelines'],\n  ['Standard - Reversed Royalty', 'reversed_royalty'],\n  ['Custom', 'custom']\n]\n\nexports.strToObj = (str) => {\n  const strArr = str.replace(/\\r\\n/g, '\\n').replace(/\\]\\[/g, ']\\n[').split('\\n');\n  let obj = {};\n\n  for (const string of strArr) {\n    let regex = string.match(/\\[([^\\s]+)\\s+\\\"([^\\\"]*)\\\"\\]/);\n\n    if (regex == null) continue;\n\n    obj[regex[1].toLowerCase()] = regex[2];\n\n    if (regex[1].toLowerCase() == 'board') {\n      obj[regex[1].toLowerCase()] = this.lookupVariant(regex[2]);\n    }\n\n    try {\n      const tmp = JSON.parse(regex[2]);\n\n      obj[regex[1].toLowerCase()] = tmp;\n    } catch (err) { }\n  }\n\n  return obj;\n}\n\nexports.objToStr = (obj) => {\n  let objArr = Object.keys(obj);\n  let str = '';\n\n  for (const key of objArr) {\n\n    if (typeof obj[key] === 'object') {\n\n      str += '[' + key.charAt(0).toUpperCase() + key.substr(1) + ' \\\"' + JSON.stringify(obj[key]).replace(/\\\"/g, '\\'') + '\\\"]\\n';\n    } else if (key === 'board') {\n\n      str += '[' + key.charAt(0).toUpperCase() + key.substr(1) + ' \\\"' + this.lookupVariantFull(obj[key]) + '\\\"]\\n';\n    } else {\n\n      str += '[' + key.charAt(0).toUpperCase() + key.substr(1) + ' \\\"' + obj[key] + '\\\"]\\n';\n    }\n  }\n\n  return str;\n}\n\nexports.lookupVariant = (variantPrettyStr) => {\n  //More lenient input since its used frequently in front facing application.\n  for (const variant of variantDict) {\n\n    if (variant[0].toLocaleLowerCase().includes(variantPrettyStr.toLocaleLowerCase().replace(/_/g, ' '))) {\n      return variant[1];\n    }\n\n    if (variant[1] == this.lookupVariantFull(variantPrettyStr) && variant[1] != 'Standard') {\n      return variant[1];\n    }\n  }\n\n  return 'standard';\n}\n\nexports.lookupVariantFull = (variantStr) => {\n\n  for (const variant of variantDict) {\n\n    if (variant[1] == variantStr) return variant[0];\n\n  }\n\n  return 'Standard';\n}\n\nexports.variantDict = variantDict;\n},{}],13:[function(require,module,exports){\nconst boardFuncs = require('./board');\nconst pgnFuncs = require('./pgn');\nconst pieceFuncs = require('./piece');\n\nexports.toPosition = (positionObj, isTurnZero = false) => {\n  let res = [];\n\n  if (positionObj.timeline >= 0) {\n    res[0] = (positionObj.timeline * 2);\n  } else {\n    res[0] = ((-positionObj.timeline) * 2) - 1;\n  }\n\n  let currTurn = positionObj.turn;\n\n  if (isTurnZero) currTurn++;\n\n  res[1] = ((currTurn - 1) * 2) + (positionObj.player === 'white' ? 0 : 1);\n\n  res[2] = positionObj.rank - 1;\n\n  res[3] = positionObj.file - 1;\n\n  return res;\n}\n\nexports.fromPosition = (position, isTurnZero = false) => {\n  let res = {};\n\n  if (position[0] == 0) {\n    res.timeline = 0;\n  } else if (position[0] % 2 == 0) {\n    res.timeline = Math.ceil(position[0] / 2);\n  } else {\n    res.timeline = -Math.ceil(position[0] / 2);\n  }\n\n  res.turn = Math.floor(position[1] / 2) + 1;\n\n  if (isTurnZero) res.turn--;\n\n  res.player = (position[1] % 2 === 0 ? 'white' : 'black');\n  res.coordinate = pgnFuncs.toSanCoord([position[2], position[3]]);\n  res.rank = position[2] + 1;\n  res.file = position[3] + 1;\n\n  return res;\n}\n\nexports.toMove = (moveObj, isTurnZero = false) => {\n  let res = [];\n\n  res[0] = this.toPosition(moveObj.start, isTurnZero);\n  res[1] = this.toPosition(moveObj.end, isTurnZero);\n\n  if (moveObj.promotion !== null) {\n    res[1][4] = pieceFuncs.fromChar(moveObj.promotion, moveObj.player === 'white' ? 0 : 1);\n  }\n\n  if (moveObj.enPassant != null) {\n    res[2] = this.toPosition(moveObj.enPassant, isTurnZero);\n  }\n\n  if (moveObj.castling != null) {\n    res[2] = this.toPosition(moveObj.castling.start, isTurnZero);\n    res[3] = this.toPosition(moveObj.castling.end, isTurnZero);\n  }\n\n  return res;\n}\n\nexports.fromMove = (fullBoard, move, isTurnZero = false) => {\n  let res = {\n    promotion: null,\n    enPassant: null,\n    castling: null\n  };\n\n  res.start = this.fromPosition(move[0], isTurnZero);\n  res.end = this.fromPosition(move[1], isTurnZero);\n  res.player = (move[0][1] % 2 == 0 ? 'white' : 'black');\n\n  if (move[1][4] != undefined && move.length == 2) {\n    res.promotion = pieceFuncs.toChar(move[1][4]);\n  }\n\n  if (move.length == 3) {\n    res.enPassant = this.fromPosition(move[2], isTurnZero);\n  }\n\n  if (move.length == 4) {\n\n    let realEnd = move[3].slice();\n    realEnd[1] = realEnd[1] + 1;\n\n    res.castling = {\n      start: this.fromPosition(move[2], isTurnZero),\n      end: this.fromPosition(move[3], isTurnZero),\n      realEnd: this.fromPosition(realEnd, isTurnZero)\n    }\n  }\n\n  //Calculating real end position\n  let currMinT = 0;\n  let currMaxT = 0;\n  let newMinT = 0;\n  let newMaxT = 0;\n  const tmpBoard = boardFuncs.copy(fullBoard);\n\n  try {\n\n    for (let i = 0; i < tmpBoard.length; i++) {\n      if (typeof tmpBoard[i] == 'undefined' || tmpBoard[i] == null) continue;\n\n      if (i % 2 == 0) {\n        currMaxT = i;\n      } else {\n        currMinT = i;\n      }\n    }\n\n    boardFuncs.move(tmpBoard, move);\n\n    for (let i = 0; i < tmpBoard.length; i++) {\n      if (typeof tmpBoard[i] == 'undefined' || tmpBoard[i] == null) continue;\n\n      if (i % 2 == 0) {\n        newMaxT = i;\n      }\n      else {\n        newMinT = i;\n      }\n    }\n  } catch (err) { }\n\n  let realEnd = move[1].slice();\n\n  realEnd[1] = realEnd[1] + 1;\n\n  if (currMinT != newMinT) {\n    realEnd[0] = newMinT;\n  } else if (currMaxT != newMaxT) {\n    realEnd[0] = newMaxT;\n  }\n\n  res.realEnd = this.fromPosition(realEnd, isTurnZero);\n\n  return res;\n}\n\nexports.toAction = (actionObj, isTurnZero = false) => {\n  let res = [];\n\n  for (const move of actionObj.moves) {\n    res.push(this.toMove(move, isTurnZero));\n  }\n\n  return res;\n}\n\nexports.fromAction = (fullBoard, actionNum, moves, isTurnZero = false) => {\n  let res = {};\n\n  res.action = Math.floor(actionNum / 2) + 1;\n  res.player = (actionNum % 2 === 0 ? 'white' : 'black');\n  res.moves = [];\n\n  let tmpBoard = boardFuncs.copy(fullBoard);\n\n  for (const move of moves) {\n    res.moves.push(this.fromMove(tmpBoard, move, isTurnZero));\n\n    boardFuncs.move(tmpBoard, move);\n  }\n\n  return res;\n}\n\nexports.toPiece = (pieceObj) => {\n  let res = pieceFuncs.fromChar(pieceObj.piece, (pieceObj.player == 'white' ? 0 : 1));\n\n  if (pieceObj.hasMoved == false) {\n    res = -res;\n  }\n\n  return res;\n}\n\nexports.fromPiece = (fullBoard, position, isTurnZero = false) => {\n  const piece = fullBoard[position[0]][position[1]][position[2]][position[3]];\n  let res = {};\n\n  res.position = this.fromPosition(position, isTurnZero);\n  res.piece = pieceFuncs.toChar(piece);\n  res.player = (Math.abs(piece) % 2 === 0 ? 'white' : 'black');\n  res.hasMoved = piece > 0;\n\n  return res;\n}\n\nexports.toTurn = (turnObj, isTurnZero = false) => {\n  let res = [];\n\n  for (let r = 0; r < turnObj.height; r++) {\n    res.push([]);\n\n    for (let f = 0; f < turnObj.width; f++) {\n      res[r][f] = 0;\n    }\n  }\n\n  for (const pieceObj of turnObj.pieces) {\n    const piece = this.toPiece(pieceObj);\n    const position = this.toPosition(pieceObj.position, isTurnZero);\n\n    res[position[2]][position[3]] = piece;\n  }\n\n  return res;\n}\n\nexports.fromTurn = (fullBoard, timeline, turn, isTurnZero = false) => {\n  const currTurn = fullBoard[timeline][turn];\n  let res = {};\n\n  res.turn = Math.floor(turn / 2) + 1;\n\n  if (isTurnZero) res.turn--;\n\n  res.player = (turn % 2 == 0 ? 'white' : 'black');\n  res.pieces = [];\n  res.width = 0;\n  res.height = currTurn.length;\n\n  for (let r = 0; r < currTurn.length; r++) {\n    for (let f = 0; f < currTurn[r].length; f++) {\n\n      if (currTurn[r][f] == 0) continue;\n\n      res.pieces.push(this.fromPiece(fullBoard, [\n        timeline,\n        turn,\n        r,\n        f\n      ], isTurnZero));\n\n\n      res.width = (res.width < currTurn[r].length) ? currTurn[r].length : res.width;\n\n    }\n  }\n  return res;\n}\n\nexports.toTimeline = (timelineObj, isTurnZero = false) => {\n  let res = [];\n  let maxTurnNumber = 0;\n\n  for (const turn of timelineObj.turns) {\n    let currTurnNumber = turn.turn;\n\n    if (isTurnZero) currTurnNumber++;\n\n    const newTurnNumber = ((currTurnNumber - 1) * 2) + (turn.player == 'white' ? 0 : 1);\n\n    maxTurnNumber = (maxTurnNumber < newTurnNumber) ? newTurnNumber : maxTurnNumber;\n  }\n\n  for (let i = 0; i < maxTurnNumber; i++) {\n    res[i] = null;\n  }\n\n  for (const turn of timelineObj.turns) {\n    let currTurnNumber = turn.turn;\n\n    if (isTurnZero) currTurnNumber++;\n\n    const newTurnNumber = ((currTurnNumber - 1) * 2) + (turn.player == 'white' ? 0 : 1);\n\n    res[newTurnNumber] = this.toTurn(turn, isTurnZero);\n  }\n\n  return res;\n}\n\nexports.fromTimeline = (fullBoard, actionNum, timeline, isTurnZero = false) => {\n  let res = {};\n\n  if (timeline == 0) {\n    res.timeline = 0;\n  } else if (timeline % 2 == 0) {\n    res.timeline = Math.ceil(timeline / 2);\n  } else {\n    res.timeline = -Math.ceil(timeline / 2);\n  }\n\n  res.player = (timeline % 2 == 0 ? 'white' : 'black');\n  res.turns = [];\n  res.active = boardFuncs.active(fullBoard).includes(timeline);\n  res.present = boardFuncs.present(fullBoard, actionNum).includes(timeline);\n\n  const currTimeline = fullBoard[timeline];\n\n  for (let i = 0; i < currTimeline.length; i++) {\n    if (typeof currTimeline[i] == 'undefined' || currTimeline[i] == null) continue;\n\n    res.turns.push(this.fromTurn(fullBoard, timeline, i, isTurnZero));\n  }\n\n  return res;\n}\n\nexports.toBoard = (boardObj) => {\n  const timeline = boardObj.timelines;\n  let res = [];\n  let isTurnZero = false;\n  let maxTimelineNumber = 0;\n\n  for (const turn of timeline) {\n    for (const rank of turn.turns) {\n\n      if (rank.turn == 0) isTurnZero = true;\n    }\n\n    const newTimelineNumber = (turn.timeline < 0) ? ((-turn.timeline.timeline) * 2) - 1 : (turn.timeline * 2);\n\n    maxTimelineNumber = (maxTimelineNumber < newTimelineNumber) ? newTimelineNumber : maxTimelineNumber\n  }\n\n  for (let i = 0; i < maxTimelineNumber; i++) {\n    res[i] = null;\n  }\n\n  for (let i = 0; i < timeline.length; i++) {\n    const newTimelineNumber = (timeline[i].timeline < 0) ? ((-timeline[i].timeline) * 2) - 1 : (timeline[i].timeline * 2);\n\n    res[newTimelineNumber] = this.toTimeline(boardObj.timelines[i], isTurnZero);\n  }\n\n  return res;\n}\n\nexports.fromBoard = (fullBoard, actionNum) => {\n  const isTurnZero = boardFuncs.isTurnZero(fullBoard);\n  let res = {};\n\n  res.action = Math.floor(actionNum / 2) + 1;\n  res.player = (actionNum % 2 === 0 ? 'white' : 'black');\n  res.timelines = [];\n\n  for (let i = 0; i < fullBoard.length; i++) {\n    if (typeof fullBoard[i] === 'undefined' || fullBoard[i] === null) continue;\n\n    res.timelines.push(this.fromTimeline(fullBoard, actionNum, i, isTurnZero));\n  }\n\n  res.width = 0;\n  res.height = 0;\n\n  for (const timeline of res.timelines) {\n    for (const turn of timeline.turns) {\n      if (res.width < turn.width) {\n        res.width = turn.width;\n      }\n\n      if (res.height < turn.height) {\n        res.height = turn.height;\n      }\n    }\n  }\n\n  return res;\n}\n\n},{\"./board\":5,\"./pgn\":14,\"./piece\":15}],14:[function(require,module,exports){\nconst boardFuncs = require('./board');\nconst parseFuncs = require('./parse');\nconst pieceFuncs = require('./piece');\nconst validateFuncs = require('./validate');\n// const copyFuncs = require('@local/copy');\n// const { action } = require('./convert');\n\nexports.toSanCoord = (point) => {\n\n  return String.fromCharCode(point[1] + 97) + (point[0] + 1);\n}\n\nexports.fromSanCoord = (str) => {\n\n  const match = str.match(/^([a-h]?)(\\d?)/);\n\n  return [\n    match[2].length > 0 ? Number(match[2]) - 1 : -1,\n    match[1].length > 0 ? match[1].charCodeAt(0) - 97 : -1\n  ];\n}\n\nexports.ambiguousSan = (move, fullBoard, actionNum = 0, moveGen = [], promotionPieces = null) => {\n\n  //moveGen here is for pre-generated moves (skipping generating moves again)\n  const src = move[0];\n  const dest = move[1];\n  const piece = Math.abs(fullBoard[src[0]][src[1]][src[2]][src[3]]);\n  const destPiece = fullBoard[dest[0]][dest[1]][dest[2]][dest[3]];\n\n  let moves = (moveGen.length <= 0) ? boardFuncs.moves(fullBoard, actionNum, false, false, promotionPieces) : moveGen\n\n  let conflict = false;\n  let sameRank = false;\n  let sameFile = false;\n  let res = '';\n\n  for (const possibleMove of moves) {\n    if (validateFuncs.compareMove(move, possibleMove) == 0 || possibleMove.length > 3) continue;\n\n    let currSrc = possibleMove[0];\n    let currDest = possibleMove[1];\n    let currPiece = Math.abs(fullBoard[currSrc[0]][currSrc[1]][currSrc[2]][currSrc[3]]);\n\n    if (piece != currPiece) continue;\n\n    if (\n      src[0] == currSrc[0] &&\n      src[1] == currSrc[1] &&\n      dest[0] == currDest[0] &&\n      dest[1] == currDest[1] &&\n      dest[2] == currDest[2] &&\n      dest[3] == currDest[3]\n    ) {\n\n      if (src[2] == currSrc[2]) sameRank = true;\n\n      if (src[3] == currSrc[3]) sameFile = true;\n\n      conflict = true;\n    }\n  }\n\n  if (conflict) {\n    if (!sameFile) {\n\n      res += this.toSanCoord([src[2], src[3]])[0];\n\n    } else if (sameFile && !sameRank) {\n\n      res += this.toSanCoord([src[2], src[3]])[1];\n\n    } else if (sameFile && sameRank) {\n\n      res += this.toSanCoord([src[2], src[3]]);\n    }\n  }\n\n  if (Math.abs(destPiece) != 0 || move.length == 3) {\n    if (Math.abs(piece) == 1 || Math.abs(piece) == 2 && !conflict) {\n\n      res += this.toSanCoord([src[2], src[3]])[0];\n\n    }\n\n    res += 'x';\n  }\n\n  res += this.toSanCoord([dest[2], dest[3]]);\n\n  return res;\n}\n\nexports.fromMove = (move, fullBoard = [], actionNum = 0, suffix = '', timelineActivationToken = true, newTimelineToken = true, superPhysicalToken = false) => {\n  const src = move[0];\n  const dest = move[1];\n  const isTurnZero = boardFuncs.isTurnZero(fullBoard);\n  const isEvenTimeline = boardFuncs.isEvenTimeline(fullBoard);\n  const moveObj = parseFuncs.fromMove(fullBoard, move, isTurnZero);\n  const isSingleTimeline = fullBoard.length <= 1;\n  const isTimelineTravel = src[0] !== dest[0];\n  const isTimeTravel = src[1] !== dest[1];\n  let res = '';\n\n  //Checking if castling needs to be in O-O format\n  const isNormalCastling = move.length === 4 && boardFuncs.isNormalCastling(fullBoard);\n  // let isEnPassant = move.length === 3;\n  const isPromotion = dest.length >= 5;\n  const isJump = (isTimelineTravel || isTimeTravel);\n  let isPresentMoving = false;\n  let isBranching = false;\n  let newActivePresent = null;\n  let newTimeline = null;\n\n  if (isJump) {\n    const tmpBoard = boardFuncs.copy(fullBoard);\n    let excludeActive = null;\n    let newActive = null;\n\n    boardFuncs.move(tmpBoard, move);\n\n    for (let i = 0; i < tmpBoard.length; i++) {\n      if (!Array.isArray(tmpBoard[i]) || Array.isArray(fullBoard[i])) continue;\n\n      isBranching = true;\n      newTimeline = i % 2 == 0 ? Math.ceil(i / 2) : -Math.ceil(i / 2);\n      excludeActive = i;\n    }\n\n    const actives = boardFuncs.active(fullBoard);\n    const tmpActives = boardFuncs.active(tmpBoard);\n\n    for (let i = 0; i < tmpActives.length; i++) {\n\n      if (!actives.includes(tmpActives[i]) && tmpActives[i] != excludeActive) newActive = tmpActives[i];\n    }\n\n    if (newActive != null && tmpBoard[newActive].length + 1 < tmpBoard[excludeActive].length) {\n\n      newActivePresent = Math.floor((tmpBoard[newActive].length + 1) / 2);\n    }\n\n    if (tmpActives.includes(excludeActive)) isPresentMoving = true;\n\n  }\n\n  let srcSP = `(${moveObj.start.timeline}T${moveObj.start.turn})`;\n  //Adjust the timeline field for even timelines\n  if (isEvenTimeline) {\n\n    if (moveObj.start.timeline < -1) {\n\n      srcSP = `(${moveObj.start.timeline + 1}T${moveObj.start.turn})`;\n\n    } else if (moveObj.start.timeline == -1) {\n\n      srcSP = `(-0T${moveObj.start.turn})`;\n\n    } else if (moveObj.start.timeline == 1) {\n\n      srcSP = `(+0T${moveObj.start.turn})`;\n\n    } else {\n\n      srcSP = `(${moveObj.start.timeline - 1}T${moveObj.start.turn})`;\n    }\n  }\n\n  let destSP = `(${moveObj.end.timeline}T${moveObj.end.turn})`;\n  //Adjust the timeline field for even timelines\n  if (isEvenTimeline) {\n\n    if (moveObj.end.timeline < -1) {\n\n      destSP = `(${moveObj.end.timeline + 1}T${moveObj.end.turn})`;\n\n    } else if (moveObj.end.timeline === -1) {\n\n      destSP = `(-0T${moveObj.end.turn})`;\n\n    } else if (moveObj.end.timeline === 1) {\n\n      destSP = `(+0T${moveObj.end.turn})`;\n\n    } else {\n\n      destSP = `(${moveObj.end.timeline - 1}T${moveObj.end.turn})`;\n    }\n  }\n\n  const srcPiece = fullBoard[src[0]][src[1]][src[2]][src[3]];\n  const destPiece = fullBoard[dest[0]][dest[1]][dest[2]][dest[3]];\n  const isCapturing = Math.abs(destPiece) !== 0;\n  const pieceChar = pieceFuncs.toChar(srcPiece, isJump);\n  let promotionPieceChar = '';\n\n  if (isPromotion) promotionPieceChar = pieceFuncs.toChar(dest[4]);\n\n  //Notation construction\n  if (isJump) {\n\n    res += srcSP;\n    res += pieceChar;\n    res += this.toSanCoord([src[2], src[3]]);\n    res += isBranching ? '>>' : '>';\n    res += isCapturing ? 'x' : '';\n    res += destSP;\n    res += this.toSanCoord([dest[2], dest[3]]);\n\n  } else {\n\n    if (superPhysicalToken || !isSingleTimeline) res += srcSP;\n\n    if (isNormalCastling) {\n\n      res += 'O-O';\n\n      if (Math.abs(move[2][3] - move[3][3]) > 2) {\n        //Queenside\n        res += '-O';\n      }\n\n    } else {\n\n      res += pieceChar;\n      res += this.ambiguousSan(move, fullBoard, actionNum, [], null);\n    }\n  }\n\n  if (isPromotion) res += `=${promotionPieceChar}`;\n\n  res += suffix;\n  res += isPresentMoving ? '~' : '';\n\n  if (timelineActivationToken && newActivePresent !== null) res += ` (~T${newActivePresent})`;\n\n  if (newTimelineToken && newTimeline != null) res += ` (>L${newTimeline})`;\n\n  return res;\n}\n\nexports.toMove = (moveStr, fullBoard = [], actionNum = 0, moveGen = [], promotionPieces = null) => {\n  //moveGen here is for pre-generated moves (skipping generating moves again)\n  let res = [[0, 0, -1, -1], [0, 0, -1, -1]];\n\n  //Remove tokens\n  const orgMoveStr = moveStr;\n\n  moveStr = moveStr.replace(/\\r\\n/g, '\\n');\n  moveStr = moveStr.replace(/\\{[^\\{\\}]*\\}/g, '');\n  moveStr = moveStr.replace(/;[^;\\n]*\\n/g, '\\n');\n  moveStr = moveStr.replace(/\\s/g, '');\n  moveStr = moveStr.replace(/\\(~T\\-?\\d*\\)/g, '');\n  moveStr = moveStr.replace(/\\(>L\\-?\\d*\\)/g, '');\n\n  //Start move reconstruction\n  const isJump = moveStr.includes('>');\n  const isTurnZero = boardFuncs.isTurnZero(fullBoard);\n  const isEvenTimeline = boardFuncs.isEvenTimeline(fullBoard);\n  let piece = actionNum % 2 == 0 ? 2 : 1;\n\n  if (isJump) {\n    try {\n      let srcSP = moveStr.match(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/)[0];\n\n      moveStr = moveStr.replace(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/, '');\n\n      srcSP = srcSP.replace(/L/g, '');\n\n      let srcSPArr = srcSP.match(/\\((\\-?\\+?\\d*)T(\\-?\\+?\\d*)\\)/);\n\n      let srcL = Number(srcSPArr[1]);\n\n      //Adjust extracted timeline if in even timeline mode\n      if (isEvenTimeline) {\n\n        if (srcSPArr[1] == '-0') {\n\n          srcL = -1;\n\n        } else if (srcSPArr[1] == '+0') {\n\n          srcL = 1;\n\n        } else if (srcL < 0) {\n\n          srcL--;\n\n        } else if (srcL > 0) {\n\n          srcL++;\n        }\n      }\n\n      const srcT = Number(srcSPArr[2]);\n\n      res[0][0] = Math.abs(srcL) * 2 + (srcL < 0 ? -1 : 0);\n\n      res[0][1] = (srcT - 1) * 2 + (actionNum % 2 === 0 ? 0 : 1);\n\n      if (isTurnZero) res[0][1] += 2;\n\n    } catch (err) { throw new Error('Source super-physical coordinates missing or incorrect!'); }\n\n    const pieceChar = moveStr.match(/^[A-Z]+/);\n\n    if (pieceChar != null) {\n\n      piece = pieceFuncs.fromChar(pieceChar[0], actionNum);\n    }\n\n    moveStr = moveStr.replace(/^[A-Z]+/, '');\n\n    const srcP = this.fromSanCoord(moveStr.match(/^[a-h]\\d/)[0]);\n\n    moveStr = moveStr.replace(/^[a-h]\\d/, '');\n\n    res[0][2] = srcP[0];\n    res[0][3] = srcP[1];\n\n    moveStr = moveStr.replace(/>/g, '');\n    moveStr = moveStr.replace(/^x/, '');\n\n    try {\n      let destSP = moveStr.match(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/)[0];\n\n      moveStr = moveStr.replace(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/, '');\n\n      destSP = destSP.replace(/L/g, '');\n\n      const destSPArr = destSP.match(/\\((\\-?\\+?\\d*)T(\\-?\\+?\\d*)\\)/);\n      let destL = Number(destSPArr[1]);\n\n      //Adjust extracted timeline if in even timeline mode\n      if (isEvenTimeline) {\n        if (destSPArr[1] == '-0') {\n          destL = -1;\n        }\n        else if (destSPArr[1] == '+0') {\n          destL = 1;\n        }\n        else if (destL < 0) {\n          destL--;\n        }\n        else if (destL > 0) {\n          destL++;\n        }\n      }\n\n      const destT = Number(destSPArr[2]);\n\n      res[1][0] = Math.abs(destL) * 2 + (destL < 0 ? -1 : 0);\n      res[1][1] = (destT - 1) * 2 + (actionNum % 2 == 0 ? 0 : 1);\n\n      if (isTurnZero) res[1][1] += 2;\n    } catch (err) { throw new Error('Destination super-physical coordinates missing or incorrect!'); }\n\n    const destP = this.fromSanCoord(moveStr.match(/^[a-h]\\d/)[0]);\n\n    res[1][2] = destP[0];\n    res[1][3] = destP[1];\n  } else {\n    try {\n\n      const srcSP = moveStr.match(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/)[0].replace(/L/g, '');;\n      const srcSPArr = srcSP.match(/\\((\\-?\\+?\\d*)T(\\-?\\+?\\d*)\\)/);\n\n      moveStr = moveStr.replace(/^\\(L?\\-?\\+?\\d+T\\-?\\+?\\d+\\)/, '');\n\n      let srcL = Number(srcSPArr[1]);\n\n      //Adjust extracted timeline if in even timeline mode\n      if (isEvenTimeline) {\n\n        if (srcSPArr[1] == '-0') {\n\n          srcL = -1;\n\n        } else if (srcSPArr[1] == '+0') {\n\n          srcL = 1;\n\n        } else if (srcL < 0) {\n\n          srcL--;\n\n        } else if (srcL > 0) {\n\n          srcL++;\n        }\n      }\n\n      const srcT = Number(srcSPArr[2]);\n\n      res[0][0] = Math.abs(srcL) * 2 + (srcL < 0 ? -1 : 0);\n      res[0][1] = (srcT - 1) * 2 + (actionNum % 2 === 0 ? 0 : 1);\n\n      if (isTurnZero) res[0][1] += 2;\n\n    } catch (err) {\n      if (fullBoard.length >= 1 && fullBoard[0].length > 0) {\n        res[0][1] = (fullBoard[0].length - 1);\n      }\n    }\n\n    res[1][0] = res[0][0];\n    res[1][1] = res[0][1];\n\n    if (moveStr.includes('O-O')) {\n      if (actionNum % 2 !== 0) {\n        res[0][2] = 7;\n        res[1][2] = 7;\n      } else {\n        res[0][2] = 0;\n        res[1][2] = 0;\n      }\n\n      res[0][3] = 4;\n\n      if (moveStr.includes('O-O-O')) {\n\n        res[1][3] = 2;\n\n      } else {\n\n        res[1][3] = 6;\n      }\n    } else {\n\n      let pieceChar = moveStr.match(/^[A-Z]+/);\n      if (pieceChar !== null) {\n        piece = pieceFuncs.fromChar(pieceChar[0], actionNum);\n      }\n      moveStr = moveStr.replace(/^[A-Z]+/, '');\n      let coordArr = moveStr.match(/^([a-h]?\\d?)x?([a-h]\\d)/);\n      let srcP = this.fromSanCoord(coordArr[1]);\n      let destP = this.fromSanCoord(coordArr[2]);\n      moveStr = moveStr.replace(/^[a-h]?\\d?x?[a-h]\\d/, '');\n      res[0][2] = srcP[0];\n      res[0][3] = srcP[1];\n      res[1][2] = destP[0];\n      res[1][3] = destP[1];\n    }\n  }\n\n  const promotionChar = moveStr.match(/^=([A-Z])+/);\n\n  if (promotionChar != null) {\n\n    moveStr = moveStr.slice(promotionChar[0].length);\n    res[1][4] = pieceFuncs.fromChar(promotionChar[1], actionNum);\n  }\n\n  let moves = moveGen;\n\n  if (moves.length <= 0) {\n    moves = boardFuncs.moves(fullBoard, actionNum, false, false, false, promotionPieces);\n  }\n\n  let conflictMoves = [];\n\n  for (let i = 0; i < moves.length; i++) {\n    if (\n      res[0][0] != moves[i][0][0] ||\n      res[0][1] != moves[i][0][1] ||\n      res[1][0] != moves[i][1][0] ||\n      res[1][1] != moves[i][1][1] ||\n      res[1][2] != moves[i][1][2] ||\n      res[1][3] != moves[i][1][3] ||\n      (res[1][4] != undefined && Math.abs(res[1][4]) != Math.abs(moves[i][1][4]))\n    ) continue;\n\n    if (res[0][2] == moves[i][0][2] && res[0][3] == moves[i][0][3]) return moves[i];\n\n    if (piece == Math.abs(fullBoard[moves[i][0][0]][moves[i][0][1]][moves[i][0][2]][moves[i][0][3]])) {\n      conflictMoves.push(moves[i]);\n    }\n  }\n\n  const sameRank = res[0][2] < 0;\n  const sameFile = res[0][3] < 0;\n\n  for (let i = 0; i < conflictMoves.length; i++) {\n\n    //no ambiguity\n    if (sameRank && sameFile) return conflictMoves[i];\n\n    if (!sameRank && sameFile && conflictMoves[i][0][2] == res[0][2]) return conflictMoves[i];\n\n    if (sameRank && !sameFile && conflictMoves[i][0][3] == res[0][3]) return conflictMoves[i];\n  }\n\n  if (moves.length > 0) {\n    throw new Error('No valid move found! Error occurred with this move: ' + orgMoveStr);\n  }\n\n  if (sameRank) res[0][2] = 0;\n\n  if (sameFile) res[0][3] = 0;\n\n  return res;\n}\n\nexports.fromAction = (action, board = [], actionNum = 0, suffix = '', timelineActivationToken = true, newTimelineToken = true, superPhysicalToken = false) => {\n  let res = '';\n  const tmpBoard = boardFuncs.copy(board);\n\n  for (let i = 0; i < action.length; i++) {\n    res += this.fromMove(action[i], tmpBoard, actionNum, i + 1 === action.length ? suffix : '', timelineActivationToken, newTimelineToken, superPhysicalToken);\n\n    if (i + 1 < action.length) res += ' ';\n\n    boardFuncs.move(tmpBoard, action[i]);\n  }\n\n  return res;\n}\n\nexports.toAction = (actionStr, board = [], actionNum = 0, promotionPieces = null) => {\n  let tmpStr = '' + actionStr;\n\n  tmpStr = tmpStr.replace(/\\r\\n/g, '\\n');\n  tmpStr = tmpStr.replace(/\\{[^\\{\\}]*\\}/g, '');\n  tmpStr = tmpStr.replace(/;[^;\\n]*\\n/g, '\\n');\n  tmpStr = tmpStr.replace(/\\(~T\\-?\\d*\\)/g, '');\n  tmpStr = tmpStr.replace(/\\(>L\\-?\\d*\\)/g, '');\n  tmpStr = tmpStr.replace(/\\s+/g, ' ');\n\n  const splitArr = tmpStr.split(' ');\n\n  let res = [];\n  const tmpBoard = boardFuncs.copy(board);\n\n  for (let i = 0; i < splitArr.length; i++) {\n    if (splitArr[i].length <= 0) continue;\n\n    const currMove = this.toMove(splitArr[i], tmpBoard, actionNum, [], promotionPieces);\n\n    res.push(currMove);\n\n    boardFuncs.move(tmpBoard, currMove);\n\n  }\n\n  return res;\n}\n\nexports.fromActionHistory = (actionHistory, startingBoard = [], startingActionNum = 0, delimiter = '\\n', suffixArr = [], timelineActivationToken = true, newTimelineToken = true, superPhysicalToken = false) => {\n  const tmpBoard = boardFuncs.copy(startingBoard);\n  let tmpActionNum = startingActionNum;\n  let res = '';\n\n  for (let i = 0; i < actionHistory.length; i++) {\n\n    if (tmpActionNum % 2 == 0) {\n\n      res += (Math.floor(tmpActionNum / 2) + 1) + '. ';\n\n    } else {\n      res += ' / ';\n    }\n\n    const currAction = this.fromAction(actionHistory[i], tmpBoard, tmpActionNum, suffixArr[i] ? suffixArr[i] : '', timelineActivationToken, newTimelineToken, superPhysicalToken);\n\n    res += currAction;\n\n    if (tmpActionNum % 2 !== 0 && i + 1 < actionHistory.length) {\n      res += delimiter;\n    }\n\n    for (let j = 0; j < actionHistory[i].length; j++) {\n      boardFuncs.move(tmpBoard, actionHistory[i][j]);\n    }\n\n    tmpActionNum++;\n  }\n\n  return res;\n}\n\nexports.toActionHistory = (actionHistoryStr, startingBoard = [], startingActionNum = 0, promotionPieces = null) => {\n  const tmpBoard = boardFuncs.copy(startingBoard);\n  let tmpActionNum = startingActionNum;\n  let tmpStr = '' + actionHistoryStr;\n\n  tmpStr = tmpStr.replace(/\\r\\n/g, '\\n');\n  tmpStr = tmpStr.replace(/\\[[^\\[\\]]*\\]/g, '');\n  tmpStr = tmpStr.replace(/\\{[^\\{\\}]*\\}/g, '');\n  tmpStr = tmpStr.replace(/;[^;\\n]*\\n/g, '\\n');\n\n  let splitArr = [];\n  let res = [];\n  let done = false;\n\n  while (!done) {\n\n    const match1 = tmpStr.match(/\\d+\\.\\s*/i);\n\n    if (match1 == null) return '';\n\n    tmpStr = tmpStr.substring(match1.index + match1[0].length);\n\n    const match2 = tmpStr.match(/\\d+\\.\\s*/i);\n\n    if (match2 != null) {\n\n      splitArr.push(tmpStr.substring(0, match2.index - 1).split('/'));\n\n      tmpStr = tmpStr.substring(match2.index);\n\n    } else {\n      splitArr.push(tmpStr.split('/'));\n\n      done = true;\n    }\n  }\n\n  splitArr = splitArr.flat(1);\n\n  for (let i = 0; i < splitArr.length; i++) {\n    if (!splitArr[i].trim()) continue;\n\n    let currAction = this.toAction(splitArr[i], tmpBoard, tmpActionNum, promotionPieces);\n\n    res.push(currAction);\n\n    for (let j = 0; j < currAction.length; j++) {\n      boardFuncs.move(tmpBoard, currAction[j]);\n    }\n\n    tmpActionNum++;\n  }\n\n  return res;\n}\n\n},{\"./board\":5,\"./parse\":13,\"./piece\":15,\"./validate\":18}],15:[function(require,module,exports){\nconst boardFuncs = require('./board');\n\n// Converts all of the piece numbers to their characters \nexports.toChar = (piece, displayPawn = false) => {\n  const absPiece = Math.abs(piece);\n\n  if (displayPawn && (absPiece === 1 || absPiece === 2)) return 'P';\n\n  switch (absPiece) {\n    case 3:\n    case 4:\n      return 'B';\n    case 5:\n    case 6:\n      return 'N';\n    case 7:\n    case 8:\n      return 'R';\n    case 9:\n    case 10:\n      return 'Q';\n    case 11:\n    case 12:\n      return 'K';\n    case 13:\n    case 14:\n      return 'S';\n    case 15:\n    case 16:\n      return 'W';\n    case 17:\n    case 18:\n      return 'C';\n    case 19:\n    case 20:\n      return 'Y';\n    case 21:\n    case 22:\n      return 'U';\n    case 23:\n    case 24:\n      return 'D';\n    default:\n      return ''\n  }\n}\n\n// Converts all of the piece characters to their numbers\nexports.fromChar = (char, actionNum = 0) => {\n  switch (char) {\n    case 'P':\n      return actionNum % 2 === 0 ? 2 : 1;\n    case 'B':\n      return actionNum % 2 === 0 ? 4 : 3;\n    case 'N':\n      return actionNum % 2 === 0 ? 6 : 5;\n    case 'R':\n      return actionNum % 2 === 0 ? 8 : 7;\n    case 'Q':\n      return actionNum % 2 === 0 ? 10 : 9;\n    case 'K':\n      return actionNum % 2 === 0 ? 12 : 11;\n    case 'S':\n      return actionNum % 2 === 0 ? 14 : 13;\n    case 'W':\n    case 'BR':\n      return actionNum % 2 === 0 ? 16 : 15;\n    case 'C':\n    case 'CK':\n      return actionNum % 2 === 0 ? 18 : 17;\n    case 'Y':\n    case 'RQ':\n      return actionNum % 2 === 0 ? 20 : 19;\n    case 'U':\n      return actionNum % 2 === 0 ? 22 : 21;\n    case 'D':\n      return actionNum % 2 === 0 ? 24 : 23;\n    default:\n      return actionNum % 2 === 0 ? 2 : 1;\n  }\n}\n\n// returns the movement positions of the given piece\nexports.movePos = (piece) => {\n  const absPiece = Math.abs(piece);\n\n  switch (absPiece) {\n    case 5:\n    case 6:\n      return [\n        [0, 0, 1, 2],\n        [0, 0, 1, -2],\n        [0, 0, -1, 2],\n        [0, 0, -1, -2],\n        [0, 0, 2, 1],\n        [0, 0, 2, -1],\n        [0, 0, -2, 1],\n        [0, 0, -2, -1],\n\n        [0, 1, 0, 2],\n        [0, 1, 0, -2],\n        [0, -1, 0, 2],\n        [0, -1, 0, -2],\n        [0, 2, 0, 1],\n        [0, 2, 0, -1],\n        [0, -2, 0, 1],\n        [0, -2, 0, -1],\n\n        [0, 1, 2, 0],\n        [0, 1, -2, 0],\n        [0, -1, 2, 0],\n        [0, -1, -2, 0],\n        [0, 2, 1, 0],\n        [0, 2, -1, 0],\n        [0, -2, 1, 0],\n        [0, -2, -1, 0],\n\n        [1, 0, 0, 2],\n        [1, 0, 0, -2],\n        [-1, 0, 0, 2],\n        [-1, 0, 0, -2],\n        [2, 0, 0, 1],\n        [2, 0, 0, -1],\n        [-2, 0, 0, 1],\n        [-2, 0, 0, -1],\n\n        [1, 0, 2, 0],\n        [1, 0, -2, 0],\n        [-1, 0, 2, 0],\n        [-1, 0, -2, 0],\n        [2, 0, 1, 0],\n        [2, 0, -1, 0],\n        [-2, 0, 1, 0],\n        [-2, 0, -1, 0],\n\n        [1, 2, 0, 0],\n        [1, -2, 0, 0],\n        [-1, 2, 0, 0],\n        [-1, -2, 0, 0],\n        [2, 1, 0, 0],\n        [2, -1, 0, 0],\n        [-2, 1, 0, 0],\n        [-2, -1, 0, 0]\n      ];\n    case 11:\n    case 12:\n    case 17:\n    case 18:\n      return [\n        [0, 0, 0, 1],\n        [0, 0, 0, -1],\n\n        [0, 0, 1, 0],\n        [0, 0, -1, 0],\n\n        [0, 0, 1, 1],\n        [0, 0, 1, -1],\n        [0, 0, -1, 1],\n        [0, 0, -1, -1],\n\n        [0, 1, 0, 0],\n        [0, -1, 0, 0],\n\n        [0, 1, 0, 1],\n        [0, 1, 0, -1],\n        [0, -1, 0, 1],\n        [0, -1, 0, -1],\n\n        [0, 1, 1, 0],\n        [0, 1, -1, 0],\n        [0, -1, 1, 0],\n        [0, -1, -1, 0],\n\n        [0, 1, 1, 1],\n        [0, 1, 1, -1],\n        [0, 1, -1, 1],\n        [0, 1, -1, -1],\n        [0, -1, 1, 1],\n        [0, -1, 1, -1],\n        [0, -1, -1, 1],\n        [0, -1, -1, -1],\n\n        [1, 0, 0, 0],\n        [-1, 0, 0, 0],\n\n        [1, 0, 0, 1],\n        [1, 0, 0, -1],\n        [-1, 0, 0, 1],\n        [-1, 0, 0, -1],\n\n        [1, 0, 1, 0],\n        [1, 0, -1, 0],\n        [-1, 0, 1, 0],\n        [-1, 0, -1, 0],\n\n        [1, 0, 1, 1],\n        [1, 0, 1, -1],\n        [1, 0, -1, 1],\n        [1, 0, -1, -1],\n        [-1, 0, 1, 1],\n        [-1, 0, 1, -1],\n        [-1, 0, -1, 1],\n        [-1, 0, -1, -1],\n\n        [1, 1, 0, 0],\n        [1, -1, 0, 0],\n        [-1, 1, 0, 0],\n        [-1, -1, 0, 0],\n\n        [1, 1, 0, 1],\n        [1, 1, 0, -1],\n        [1, -1, 0, 1],\n        [1, -1, 0, -1],\n        [-1, 1, 0, 1],\n        [-1, 1, 0, -1],\n        [-1, -1, 0, 1],\n        [-1, -1, 0, -1],\n\n        [1, 1, 1, 0],\n        [1, 1, -1, 0],\n        [1, -1, 1, 0],\n        [1, -1, -1, 0],\n        [-1, 1, 1, 0],\n        [-1, 1, -1, 0],\n        [-1, -1, 1, 0],\n        [-1, -1, -1, 0],\n\n        [1, 1, 1, 1],\n        [1, 1, 1, -1],\n        [1, 1, -1, 1],\n        [1, 1, -1, -1],\n        [1, -1, 1, 1],\n        [1, -1, 1, -1],\n        [1, -1, -1, 1],\n        [1, -1, -1, -1],\n        [-1, 1, 1, 1],\n        [-1, 1, 1, -1],\n        [-1, 1, -1, 1],\n        [-1, 1, -1, -1],\n        [-1, -1, 1, 1],\n        [-1, -1, 1, -1],\n        [-1, -1, -1, 1],\n        [-1, -1, -1, -1]\n      ];\n    default:\n      return [];\n  }\n}\n\n// returns the movement vectors of the given piece\nexports.moveVecs = (piece) => {\n  const absPiece = Math.abs(piece);\n  switch (absPiece) {\n    case 3:\n    case 4:\n      return [\n        [0, 0, 1, 1],\n        [0, 0, 1, -1],\n        [0, 0, -1, 1],\n        [0, 0, -1, -1],\n\n        [0, 1, 0, 1],\n        [0, 1, 0, -1],\n        [0, -1, 0, 1],\n        [0, -1, 0, -1],\n\n        [0, 1, 1, 0],\n        [0, 1, -1, 0],\n        [0, -1, 1, 0],\n        [0, -1, -1, 0],\n\n        [1, 0, 0, 1],\n        [1, 0, 0, -1],\n        [-1, 0, 0, 1],\n        [-1, 0, 0, -1],\n\n        [1, 0, 1, 0],\n        [1, 0, -1, 0],\n        [-1, 0, 1, 0],\n        [-1, 0, -1, 0],\n\n        [1, 1, 0, 0],\n        [1, -1, 0, 0],\n        [-1, 1, 0, 0],\n        [-1, -1, 0, 0]\n      ];\n    case 7:\n    case 8:\n      return [\n        [0, 0, 0, 1],\n        [0, 0, 0, -1],\n        [0, 0, 1, 0],\n        [0, 0, -1, 0],\n\n        [0, 1, 0, 0],\n        [0, -1, 0, 0],\n        [1, 0, 0, 0],\n        [-1, 0, 0, 0]\n      ];\n    case 9:\n    case 10:\n    case 19:\n    case 20:\n      return [\n        [0, 0, 0, 1],\n        [0, 0, 0, -1],\n\n        [0, 0, 1, 0],\n        [0, 0, -1, 0],\n\n        [0, 0, 1, 1],\n        [0, 0, -1, 1],\n        [0, 0, 1, -1],\n        [0, 0, -1, -1],\n\n        [0, 1, 0, 0],\n        [0, -1, 0, 0],\n\n        [0, 1, 0, 1],\n        [0, 1, 0, -1],\n        [0, -1, 0, 1],\n        [0, -1, 0, -1],\n\n        [0, 1, 1, 0],\n        [0, 1, -1, 0],\n        [0, -1, 1, 0],\n        [0, -1, -1, 0],\n\n        [0, 1, 1, 1],\n        [0, 1, 1, -1],\n        [0, 1, -1, 1],\n        [0, 1, -1, -1],\n        [0, -1, 1, 1],\n        [0, -1, 1, -1],\n        [0, -1, -1, 1],\n        [0, -1, -1, -1],\n\n        [1, 0, 0, 0],\n        [-1, 0, 0, 0],\n\n        [1, 0, 0, 1],\n        [1, 0, 0, -1],\n        [-1, 0, 0, 1],\n        [-1, 0, 0, -1],\n\n        [1, 0, 1, 0],\n        [1, 0, -1, 0],\n        [-1, 0, 1, 0],\n        [-1, 0, -1, 0],\n\n        [1, 0, 1, 1],\n        [1, 0, 1, -1],\n        [1, 0, -1, 1],\n        [1, 0, -1, -1],\n        [-1, 0, 1, 1],\n        [-1, 0, 1, -1],\n        [-1, 0, -1, 1],\n        [-1, 0, -1, -1],\n\n        [1, 1, 0, 0],\n        [1, -1, 0, 0],\n        [-1, 1, 0, 0],\n        [-1, -1, 0, 0],\n\n        [1, 1, 0, 1],\n        [1, 1, 0, -1],\n        [1, -1, 0, 1],\n        [1, -1, 0, -1],\n        [-1, 1, 0, 1],\n        [-1, 1, 0, -1],\n        [-1, -1, 0, 1],\n        [-1, -1, 0, -1],\n\n        [1, 1, 1, 0],\n        [1, 1, -1, 0],\n        [1, -1, 1, 0],\n        [1, -1, -1, 0],\n        [-1, 1, 1, 0],\n        [-1, 1, -1, 0],\n        [-1, -1, 1, 0],\n        [-1, -1, -1, 0],\n\n        [1, 1, 1, 1],\n        [1, 1, 1, -1],\n        [1, 1, -1, 1],\n        [1, 1, -1, -1],\n        [1, -1, 1, 1],\n        [1, -1, 1, -1],\n        [1, -1, -1, 1],\n        [1, -1, -1, -1],\n        [-1, 1, 1, 1],\n        [-1, 1, 1, -1],\n        [-1, 1, -1, 1],\n        [-1, 1, -1, -1],\n        [-1, -1, 1, 1],\n        [-1, -1, 1, -1],\n        [-1, -1, -1, 1],\n        [-1, -1, -1, -1]\n      ];\n    case 13:\n    case 14:\n      return [\n        [0, 0, 0, 1],\n        [0, 0, 0, -1],\n\n        [0, 0, 1, 0],\n        [0, 0, -1, 0],\n\n        [0, 0, 1, 1],\n        [0, 0, 1, -1],\n        [0, 0, -1, 1],\n        [0, 0, -1, -1],\n\n        [0, 1, 0, 0],\n        [0, -1, 0, 0],\n\n        [0, 1, 0, 1],\n        [0, 1, 0, -1],\n        [0, -1, 0, 1],\n        [0, -1, 0, -1],\n\n        [0, 1, 1, 0],\n        [0, 1, -1, 0],\n        [0, -1, 1, 0],\n        [0, -1, -1, 0],\n\n        [1, 0, 0, 0],\n        [-1, 0, 0, 0],\n\n        [1, 0, 0, 1],\n        [1, 0, 0, -1],\n        [-1, 0, 0, 1],\n        [-1, 0, 0, -1],\n\n        [1, 0, 1, 0],\n        [1, 0, -1, 0],\n        [-1, 0, 1, 0],\n        [-1, 0, -1, 0],\n\n        [1, 1, 0, 0],\n        [1, -1, 0, 0],\n        [-1, 1, 0, 0],\n        [-1, -1, 0, 0]\n      ];\n    case 21:\n    case 22:\n      return [\n        [0, 1, 1, 1],\n        [0, 1, 1, -1],\n        [0, 1, -1, 1],\n        [0, 1, -1, -1],\n        [0, -1, 1, 1],\n        [0, -1, 1, -1],\n        [0, -1, -1, 1],\n        [0, -1, -1, -1],\n\n        [1, 0, 1, 1],\n        [1, 0, 1, -1],\n        [1, 0, -1, 1],\n        [1, 0, -1, -1],\n        [-1, 0, 1, 1],\n        [-1, 0, 1, -1],\n        [-1, 0, -1, 1],\n        [-1, 0, -1, -1],\n\n        [1, 1, 0, 1],\n        [1, 1, 0, -1],\n        [1, -1, 0, 1],\n        [1, -1, 0, -1],\n        [-1, 1, 0, 1],\n        [-1, 1, 0, -1],\n        [-1, -1, 0, 1],\n        [-1, -1, 0, -1],\n\n        [1, 1, 1, 0],\n        [1, 1, -1, 0],\n        [1, -1, 1, 0],\n        [1, -1, -1, 0],\n        [-1, 1, 1, 0],\n        [-1, 1, -1, 0],\n        [-1, -1, 1, 0],\n        [-1, -1, -1, 0],\n      ];\n    case 23:\n    case 24:\n      return [\n        [1, 1, 1, 1],\n        [1, 1, 1, -1],\n        [1, 1, -1, 1],\n        [1, 1, -1, -1],\n        [1, -1, 1, 1],\n        [1, -1, 1, -1],\n        [1, -1, -1, 1],\n        [1, -1, -1, -1],\n        [-1, 1, 1, 1],\n        [-1, 1, 1, -1],\n        [-1, 1, -1, 1],\n        [-1, 1, -1, -1],\n        [-1, -1, 1, 1],\n        [-1, -1, 1, -1],\n        [-1, -1, -1, 1],\n        [-1, -1, -1, -1]\n      ];\n    default:\n      return []\n  }\n}\n\nexports.availablePromotionPieces = (fullBoard) => {\n\n  let res = [];\n\n  // go through the full board down to every file\n  for (let l = 0; fullBoard && l < fullBoard.length; l++) {\n    for (let t = 0; fullBoard[l] && t < fullBoard[l].length; t++) {\n      for (let r = 0; fullBoard[l][t] && r < fullBoard[l][t].length; r++) {\n        for (let f = 0; fullBoard[l][t][r] && f < fullBoard[l][t][r].length; f++) {\n          // get that piece\n          const piece = Math.abs(fullBoard[l][t][r][f]);\n          // check if that piece is not a royalty piece\n          const isNotRoyalty = piece >= 3 && piece <= 10 || piece == 13 || piece == 14 || piece == 17 || piece == 18;\n          // check if that piece is already added\n          if (isNotRoyalty && !res.includes(piece)) {\n            res.push(piece);\n            // Add opponent version if not already added\n            const opponentPiece = piece % 2 === 0 ? piece - 1 : piece + 1;\n            if (!res.includes(opponentPiece)) res.push(opponentPiece);\n          }\n        }\n      }\n    }\n  }\n  //Order pieces in order of importance\n  //TODO: system to modify this.promotionPieces on index.js for builtin variants that need it\n  return res.sort((a, b) => b - a);\n}\n\nexports.timelineMove = (sourceTimelineIndex, timelineMoveVector, isEvenTimeline = false) => {\n\n  let res = (sourceTimelineIndex % 2 == 0) ? sourceTimelineIndex + (timelineMoveVector * 2) : sourceTimelineIndex - (timelineMoveVector * 2)\n\n  res = (!isEvenTimeline && res < 0) ? (res * -1) - 1 : res;\n\n  res = (isEvenTimeline && res <= 0) ? (res * -1) + 1 : res;\n\n  return res;\n}\n\nexports.moves = (fullBoard, givenPiece, spatialOnly = false, promotionPieces = null, skipCastling = false) => {\n  let res = [];\n\n  // if the position doesn't exist return\n  if (!boardFuncs.positionExists(fullBoard, givenPiece)) return res;\n\n  const givenPieceTimeline = givenPiece[0];\n  const givenPieceTurn = givenPiece[1];\n  const givenPieceRank = givenPiece[2];\n  const givenPieceFile = givenPiece[3];\n  const piece = fullBoard[givenPieceTimeline][givenPieceTurn][givenPieceRank][givenPieceFile];\n\n  // if the spot is empty return\n  if (piece === 0) return res;\n\n  const absPiece = Math.abs(piece);\n  const pieceColor = absPiece % 2;\n  const isEvenTimeline = boardFuncs.isEvenTimeline(fullBoard);\n\n  // Pawn/Brawn movement\n  if (absPiece === 1 || absPiece === 2 || absPiece === 15 || absPiece === 16) {\n\n    const curBoard = fullBoard[givenPieceTimeline][givenPieceTurn];\n    const forward = (pieceColor === 1) ? -1 : 1;\n    const promotionRank = (pieceColor === 1) ? 0 : curBoard.length - 1;\n    const rPos = givenPieceRank + forward;\n\n    //Forward single/double square RF movement\n    if (rPos >= 0 && rPos < curBoard.length && givenPieceFile >= 0 && givenPieceFile < curBoard[rPos].length) {\n      const destPiece = curBoard[rPos][givenPieceFile];\n      // promotionPiece\n      if (destPiece === 0) {\n        // get promotion pieces\n        res = this.promotionPiece(givenPiece, fullBoard, rPos, givenPieceFile, promotionPieces, promotionRank, pieceColor, res);\n\n        if (piece < 0) {\n          const rPosDouble = rPos + forward;\n          // if rPosDouble's position exists\n          if (rPosDouble >= 0 && rPosDouble < curBoard.length && givenPieceFile >= 0 && givenPieceFile < curBoard[rPos].length) {\n            const destPiece = curBoard[rPosDouble][givenPieceFile];\n\n            // promotionPiece\n            if (destPiece === 0) {\n\n              res = this.promotionPiece(givenPiece, fullBoard, rPosDouble, givenPieceFile, promotionPieces, promotionRank, pieceColor, res);\n\n            }\n          }\n        }\n      }\n    }\n\n    //Forward single/en passant square capture RF movement\n    res = this.enPassantMovement(fullBoard, givenPiece, promotionRank, promotionPieces, forward, curBoard, pieceColor, rPos, givenPieceFile + 1, res);\n\n    res = this.enPassantMovement(fullBoard, givenPiece, promotionRank, promotionPieces, forward, curBoard, pieceColor, rPos, givenPieceFile - 1, res);\n\n    if (!spatialOnly) {\n      //Forward single square LT movement\n      let curMove = [this.timelineMove(givenPieceTimeline, -forward, isEvenTimeline), givenPieceTurn, givenPieceRank, givenPieceFile];\n\n      if (boardFuncs.positionExists(fullBoard, curMove)) {\n        const destPiece = fullBoard[curMove[0]][givenPieceTurn][givenPieceRank][givenPieceFile];\n\n        if (destPiece === 0) {\n\n          res.push([givenPiece, curMove]);\n          //Forward double square LT movement\n          if (piece < 0) {\n            const curMove = [this.timelineMove(givenPieceTimeline, -forward * 2, isEvenTimeline), givenPieceTurn, givenPieceRank, givenPieceFile];\n\n            if (boardFuncs.positionExists(fullBoard, curMove)) {\n              const destPiece = fullBoard[curMove[0]][givenPieceTurn][givenPieceRank][givenPieceFile];\n\n              if (destPiece === 0) res.push([givenPiece, curMove]);\n            }\n          }\n        }\n      }\n\n      //Forward single square capture LT movement\n      curMove = [this.timelineMove(givenPieceTimeline, -forward, isEvenTimeline), givenPieceTurn + 2, givenPieceRank, givenPieceFile];\n      // opponentTimelineCapture\n      res = this.opponentTimelineCapture(fullBoard, givenPiece, curMove, pieceColor, res);\n\n      curMove = [this.timelineMove(givenPieceTimeline, -forward, isEvenTimeline), givenPieceTurn - 2, givenPieceRank, givenPieceFile];\n      // opponentTimelineCapture\n      res = this.opponentTimelineCapture(fullBoard, givenPiece, curMove, pieceColor, res);\n\n      // Brawn-specific captures\n      if (absPiece === 15 || absPiece === 16) {\n        // ⟨l, t, y, x⟩\n        const cardinalities = [\n          [-forward, 0, 0, 1],\n          [-forward, 0, 0, -1],\n          [-forward, 0, forward, 0],\n          [0, -1, forward, 0],\n        ];\n\n        for (let [dl, dt, dy, dx] of cardinalities) {\n\n          if (pieceColor) {\n            // White's timelines\n            currMove = [givenPiece.slice(), [\n              givenPieceTimeline,\n              givenPieceTurn + 2 * dt,\n              givenPieceRank + dy,\n              givenPieceFile + dx\n            ]];\n\n            currMove[1][0] = this.timelineMove(currMove[1][0], dl, isEvenTimeline);\n          } else {\n            // Black's timelines\n            currMove = [givenPiece.slice(), [\n              givenPiece[0],\n              givenPiece[1] + 2 * dt,\n              givenPiece[2] + dy,\n              givenPiece[3] + dx\n            ]];\n\n            currMove[1][0] = this.timelineMove(currMove[1][0], dl, isEvenTimeline);\n          }\n\n          // Verify the capture and yield the move\n          if (!boardFuncs.positionExists(fullBoard, currMove[1])) continue;\n\n          const destPiece = fullBoard[currMove[1][0]][currMove[1][1]][currMove[1][2]][currMove[1][3]];\n\n          if (destPiece === 0 || (Math.abs(destPiece) % 2 === pieceColor)) continue;\n\n          if (currMove[1][2] === promotionRank) {\n            // Must promote\n            promotionPieces = (!promotionPieces || promotionPieces.length <= 0) ? this.availablePromotionPieces(fullBoard) : promotionPieces\n\n            for (let piece of promotionPieces) {\n              if (piece % 2 !== pieceColor) continue;\n\n              currMove[1][4] = piece;\n\n              res.push([currMove[0].slice(), currMove[1].slice()]);\n            }\n          } else {\n            // Can't promote\n            res.push([currMove[0].slice(), currMove[1].slice()]);\n          }\n        }\n      }\n    }\n  } else {\n\n    const curBoard = fullBoard[givenPieceTimeline][givenPieceTurn];\n    // All non-pawn/brawn pieces\n    const spatialLength = [\n      0, 0, 4, 4, 8, 8, 4, 4,\n      8, 8, 8, 8, 8, 8, 0, 0,\n      8, 8, 8, 8, 0, 0, 0, 0\n    ];\n\n    //Single square moves\n    const movePos = this.movePos(piece);\n\n    if (movePos.length !== 0) {\n      const spatial = spatialLength[Math.abs(piece) - 1];\n\n      for (let i = 0; i < spatial; i++) {\n        const rPos = givenPieceRank + movePos[i][2];\n        const fPos = givenPieceFile + movePos[i][3];\n\n        if (rPos < 0 || rPos >= curBoard.length || fPos < 0 || fPos >= curBoard[rPos].length) continue;\n\n        const destPiece = curBoard[rPos][fPos];\n\n        if (destPiece === 0 || Math.abs(destPiece) % 2 !== pieceColor) res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos]]);\n      }\n\n      if (!spatialOnly) {\n        for (let i = spatial; i < movePos.length; i++) {\n          const curMove = [\n            this.timelineMove(givenPieceTimeline, movePos[i][0], isEvenTimeline),\n            givenPieceTurn + movePos[i][1] * 2,\n            givenPieceRank + movePos[i][2],\n            givenPieceFile + movePos[i][3]\n          ];\n\n          if (!boardFuncs.positionExists(fullBoard, curMove)) continue;\n\n          const destPiece = fullBoard[curMove[0]][curMove[1]][curMove[2]][curMove[3]];\n\n          if (destPiece === 0 || Math.abs(destPiece) % 2 !== pieceColor) res.push([givenPiece, curMove]);\n        }\n      }\n    }\n\n    //Vector moves\n    const moveVecs = this.moveVecs(piece);\n    if (moveVecs.length !== 0) {\n      const spatial = spatialLength[absPiece - 1];\n\n      for (let i = 0; i < spatial; i++) {\n        const rMove = moveVecs[i][2];\n        const fMove = moveVecs[i][3];\n        let rPos = givenPieceRank + rMove;\n        let fPos = givenPieceFile + fMove;\n\n        while (rPos >= 0 && rPos < curBoard.length && fPos >= 0 && fPos < curBoard[rPos].length) {\n          const destPiece = curBoard[rPos][fPos];\n\n          if (destPiece !== 0) {\n\n            if (Math.abs(destPiece) % 2 !== pieceColor) res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos]]);\n\n            break;\n          }\n\n          res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos]]);\n\n          rPos += rMove;\n          fPos += fMove;\n        }\n      }\n\n      if (!spatialOnly) {\n\n        for (let i = spatial; i < moveVecs.length; i++) {\n          const lMove = moveVecs[i][0];\n          const tMove = moveVecs[i][1] * 2;\n          const rMove = moveVecs[i][2];\n          const fMove = moveVecs[i][3];\n          let curMove = [\n            this.timelineMove(givenPieceTimeline, lMove, isEvenTimeline),\n            givenPieceTurn + tMove,\n            givenPieceRank + rMove,\n            givenPieceFile + fMove\n          ];\n\n          while (boardFuncs.positionExists(fullBoard, curMove)) {\n            const destPiece = fullBoard[curMove[0]][curMove[1]][curMove[2]][curMove[3]];\n\n            if (destPiece !== 0) {\n              if (Math.abs(destPiece) % 2 !== pieceColor) res.push([givenPiece, curMove]);\n\n              break;\n            }\n\n            res.push([givenPiece, curMove.slice()]);\n\n            curMove[0] = this.timelineMove(curMove[0], lMove, isEvenTimeline);\n            curMove[1] += tMove;\n            curMove[2] += rMove;\n            curMove[3] += fMove;\n          }\n        }\n      }\n    }\n\n    if (piece === -11 || piece === -12) {\n      const curRank = curBoard[givenPieceRank];\n      let notInCheck = undefined;\n\n      // Kingside Castling Movement\n      let fPos = givenPieceFile + 1;\n\n      if (fPos >= 0 && fPos < curRank.length && curRank[fPos] === 0) {\n\n        fPos++;\n        if (fPos >= 0 && fPos < curRank.length && curRank[fPos] === 0) {\n\n          fPos++;\n          while (fPos >= 0 && fPos < curRank.length) {\n            const curPiece = curRank[fPos];\n\n            if (curPiece !== 0) {\n\n              if (curPiece - pieceColor === -8) {\n                const rightOnePos = [givenPieceTimeline, givenPieceTurn, givenPieceRank, givenPieceFile + 1];\n                const rightTwoPos = [givenPieceTimeline, givenPieceTurn, givenPieceRank, givenPieceFile + 2];\n\n                notInCheck = !boardFuncs.positionIsAttacked(fullBoard, givenPiece, pieceColor);\n\n                const condition = notInCheck && !boardFuncs.positionIsAttacked(fullBoard, rightOnePos, pieceColor) && !boardFuncs.positionIsAttacked(fullBoard, rightTwoPos, pieceColor);\n\n                if (condition) {\n                  res.push([\n                    givenPiece,\n                    rightTwoPos,\n                    [givenPieceTimeline, givenPieceTurn, givenPieceRank, fPos],\n                    rightOnePos\n                  ]);\n                }\n              }\n              break;\n            }\n            fPos++;\n          }\n        }\n      }\n\n      // Queenside Castling Movement\n      fPos = givenPieceFile - 1;\n\n      if (fPos >= 0 && fPos < curRank.length && curRank[fPos] === 0) {\n\n        fPos--;\n        if (fPos >= 0 && fPos < curRank.length && curRank[fPos] === 0) {\n\n          fPos--;\n          while (fPos >= 0 && fPos < curRank.length) {\n            const curPiece = curRank[fPos];\n\n            if (curPiece !== 0) {\n\n              if (curPiece - pieceColor === -8) {\n                const leftOnePos = [givenPieceTimeline, givenPieceTurn, givenPieceRank, givenPieceFile - 1];\n                const leftTwoPos = [givenPieceTimeline, givenPieceTurn, givenPieceRank, givenPieceFile - 2];\n                const isPositionAttacked =\n                  !boardFuncs.positionIsAttacked(fullBoard, leftOnePos, pieceColor) &&\n                  !boardFuncs.positionIsAttacked(fullBoard, leftTwoPos, pieceColor);\n\n                if (notInCheck !== undefined) {\n\n                  if (notInCheck && isPositionAttacked) {\n\n                    res.push([\n                      givenPiece,\n                      leftTwoPos,\n                      [givenPieceTimeline, givenPieceTurn, givenPieceRank, fPos],\n                      leftOnePos\n                    ]);\n                  }\n                } else {\n\n                  if (!boardFuncs.positionIsAttacked(fullBoard, givenPiece, pieceColor) && isPositionAttacked) {\n\n                    res.push([\n                      givenPiece,\n                      leftTwoPos,\n                      [givenPieceTimeline, givenPieceTurn, givenPieceRank, fPos],\n                      leftOnePos\n                    ]);\n                  }\n                }\n\n              }\n              break;\n            }\n            fPos--;\n          }\n        }\n      }\n    }\n  }\n  return res;\n}\n\nexports.promotionPiece = (givenPiece, fullBoard, rPos, fPos, promotionPieces, promotionRank, pieceColor, res) => {\n  const givenPieceTimeline = givenPiece[0];\n  const givenPieceTurn = givenPiece[1];\n\n  // if the given rank is the promotionRank \n  if (rPos === promotionRank) {\n    // get all of the promotion pieces if they aren't already defined\n    if (!promotionPieces || promotionPieces.length <= 0) promotionPieces = this.availablePromotionPieces(fullBoard);\n    // go through all promotion pieces\n    for (let i = 0; i < promotionPieces.length; i++) {\n      // if the piece isn't yours go to the next one\n      if (promotionPieces[i] % 2 !== pieceColor) continue;\n      // add it to the result\n      res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos, promotionPieces[i]]]);\n    }\n  } else {\n    // add it to the result\n    res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos]]);\n  }\n  return res;\n}\n\nexports.enPassant = (fullBoard, givenPiece, curBoard, pieceColor, forward, rPos, fPos, res) => {\n  const givenPieceTimeline = givenPiece[0];\n  const givenPieceTurn = givenPiece[1];\n  const givenPieceRank = givenPiece[2];\n\n  if (fPos < 0 || fPos >= curBoard[givenPieceRank].length) return res;\n  // Check the opponent piece exists at correct square\n  let destPiece = curBoard[givenPieceRank][fPos] - pieceColor;\n\n  if (destPiece !== 1 && destPiece !== 15) return res;\n\n  const rPosEn = rPos + forward;\n\n  if (\n    rPosEn >= 0 &&\n    rPosEn < curBoard.length &&\n    fPos >= 0 &&\n    fPos < curBoard[rPosEn].length\n  ) {\n    // Check the opponent piece's source square is blank\n    destPiece = curBoard[rPosEn][fPos];\n\n    if (destPiece !== 0) return res;\n\n    if (\n      boardFuncs.positionExists(fullBoard, [givenPieceTimeline, givenPieceTurn - 2, rPosEn, fPos]) &&\n      boardFuncs.positionExists(fullBoard, [givenPieceTimeline, givenPieceTurn - 2, givenPieceRank, fPos])\n    ) {\n      // Check the opponent piece square 1 turn in the past is blank\n      destPiece = fullBoard[givenPieceTimeline][givenPieceTurn - 2][givenPieceRank][fPos];\n    \n      if (destPiece !== 0) return res;\n\n      destPiece = fullBoard[givenPieceTimeline][givenPieceTurn - 2][rPosEn][fPos] + pieceColor;\n\n      if (destPiece === -1 || destPiece === -15) res.push([givenPiece, [givenPieceTimeline, givenPieceTurn, rPos, fPos], [givenPieceTimeline, givenPieceTurn, givenPieceRank, fPos]]);\n    }\n  }\n  return res;\n}\n\nexports.enPassantMovement = (fullBoard, givenPiece, promotionRank, promotionPieces, forward, curBoard, pieceColor, rPos, fPos, res) => {\n  if (rPos < 0 && rPos >= curBoard.length || fPos < 0 || fPos >= curBoard[rPos].length) return res;\n\n  const destPiece = curBoard[rPos][fPos];\n  // promotionPiece\n  if (destPiece !== 0 && Math.abs(destPiece) % 2 !== pieceColor) {\n    res = this.promotionPiece(givenPiece, fullBoard, rPos, fPos, promotionPieces, promotionRank, pieceColor, res);\n  }\n\n  res = this.enPassant(fullBoard, givenPiece, curBoard, pieceColor, forward, rPos, fPos, res);\n  return res;\n}\n\nexports.opponentTimelineCapture = (fullBoard, givenPiece, curMove, pieceColor, res) => {\n  const givenPieceRank = givenPiece[2];\n  const givenPieceFile = givenPiece[3];\n\n  if (boardFuncs.positionExists(fullBoard, curMove)) {\n    const destPiece = fullBoard[curMove[0]][curMove[1]][givenPieceRank][givenPieceFile];\n\n    if (destPiece !== 0 && Math.abs(destPiece) % 2 !== pieceColor)\n      res.push([givenPiece, curMove]);\n  }\n  return res;\n}\n},{\"./board\":5}],16:[function(require,module,exports){\nexports.turnArray = (board, timeline, turn) => {\n  var res = [];\n  for(var r = 0;r < 10;r++) {\n    res[r] = [];\n    for(var f = 0;f < 10;f++) {\n      if(r === 0) {\n        if(f === 0) {\n          res[r][f] = (turn % 2 === 0 ? '' + '╔' : '╔');\n        }\n        else if(f === 9) {\n          res[r][f] = (turn % 2 === 0 ? '' + '╗' : '╗');\n        }\n        else {\n          res[r][f] = (turn % 2 === 0 ? '' + '═' : '═');\n        }\n      }\n      else if(r === 9) {\n        if(f === 0) {\n          res[r][f] = (turn % 2 === 0 ? '' + '╚' : '╚');\n        }\n        else if(f === 9) {\n          res[r][f] = (turn % 2 === 0 ? '' + '╝' : '╝');\n        }\n        else {\n          res[r][f] = (turn % 2 === 0 ? '' + '═' : '═');\n        }\n      }\n      else if(f === 0) {\n        res[r][f] = (turn % 2 === 0 ? '' + '║' : '║');\n      }\n      else if(f === 9) {\n        res[r][f] = (turn % 2 === 0 ? '' + '║' : '║');\n      }\n      else {\n        res[r][f] = '.';\n      }\n    }\n  }\n  if(board && board[timeline] && board[timeline][turn]) {\n    for(var r = 0;r < board[timeline][turn].length;r++) {\n      if(board[timeline][turn][r]) {\n        for(var f = 0;f < board[timeline][turn][r].length;f++) {\n          var piece = Math.abs(board[timeline][turn][r][f]);\n          if(piece === 1) {\n            res[8 - r][f + 1] = 'p';\n          }\n          else if(piece === 3) {\n            res[8 - r][f + 1] = 'b';\n          }\n          else if(piece === 5) {\n            res[8 - r][f + 1] = 'n';\n          }\n          else if(piece === 7) {\n            res[8 - r][f + 1] = 'r';\n          }\n          else if(piece === 9) {\n            res[8 - r][f + 1] = 'q';\n          }\n          else if(piece === 11) {\n            res[8 - r][f + 1] = 'k';\n          }\n          else if(piece === 13) {\n            res[8 - r][f + 1] = 's';\n          }\n          else if(piece === 2) {\n            res[8 - r][f + 1] = 'P';\n          }\n          else if(piece === 4) {\n            res[8 - r][f + 1] = 'B';\n          }\n          else if(piece === 6) {\n            res[8 - r][f + 1] = 'N';\n          }\n          else if(piece === 8) {\n            res[8 - r][f + 1] = 'R';\n          }\n          else if(piece === 10) {\n            res[8 - r][f + 1] = 'Q';\n          }\n          else if(piece === 12) {\n            res[8 - r][f + 1] = 'K';\n          }\n          else if(piece === 14) {\n            res[8 - r][f + 1] = 'S';\n          }\n        }\n      }\n    }\n  }\n  var string = '' + timeline + ',' + turn;\n  for(var i = 1;i < 10;i++) {\n    if(i-1 < string.length) {\n      res[0][i] = string.charAt(i-1);\n    }\n  }\n  for(var r = 1;r < 9;r++) {\n    for(var f = 1;f < 9;f++) {\n      if((r + f) % 2 === 0) {\n        res[r][f] = res[r][f];\n      }\n    }\n  }\n  return res;\n}\n\nexports.blankTurnArray = () => {\n  var res = [];\n  for(var r = 0;r < 10;r++) {\n    res[r] = [];\n    for(var f = 0;f < 10;f++) {\n      res[r][f] = ' ';\n    }\n  }\n  return res;\n}\n\nexports.boardArray = (board) => {\n  var res = [];\n  var offset = 0;\n  for(var l = board.length - 1;board && l >= 0;l--) {\n    if(l % 2 !== 0) {\n      res[Math.floor((board.length - l - 1)/2)] = [];\n      offset++;\n    }\n    if(Array.isArray(board[l]) && l % 2 !== 0) {\n      for(var t = 0;t < board[l].length;t++) {\n        if(Array.isArray(board[l][t])) {\n          res[Math.floor((board.length - l - 1)/2)][t] = this.turnArray(board, l, t);\n        }\n        else {\n          res[Math.floor((board.length - l - 1)/2)][t] = this.blankTurnArray(board, l, t);\n        }\n      }\n    }\n  }\n  for(var l = 0;board && l < board.length;l++) {\n    if(Array.isArray(board[l]) && l % 2 === 0) {\n      res[l/2 + offset] = [];\n      for(var t = 0;t < board[l].length;t++) {\n        if(Array.isArray(board[l][t])) {\n          res[l/2 + offset][t] = this.turnArray(board, l, t);\n        }\n        else {\n          res[l/2 + offset][t] = this.blankTurnArray(board, l, t);\n        }\n      }\n    }\n  }\n  return res;\n}\n\nexports.printBoard = (board) => {\n  var printStr = '';\n  var array = this.boardArray(board);\n  for(var l = 0;array && l < array.length;l++) {\n    for(var r = 0;r < 10;r++) {\n      for(var t = 0;array[l] && t < array[l].length;t++) {\n        for(var f = 0;f < 10;f++) {\n          printStr += array[l][t][r][f];\n        }\n      }\n      printStr += '\\n';\n    }\n  }\n  return printStr;\n}\n\n},{}],17:[function(require,module,exports){\nexports.copy = (fullBoard, timeline, turn) => {\n  let res = [];\n\n  if (fullBoard && fullBoard[timeline] && fullBoard[timeline][turn]) {\n\n    for (const rank of fullBoard[timeline][turn]) {\n\n      if (!rank) continue;\n\n      res.push(rank.slice());\n\n    }\n\n  }\n\n  if (res.length <= 0) return null;\n\n  return res;\n}\n\n},{}],18:[function(require,module,exports){\nconst boardFuncs = require('./board');\n\nexports.move = (fillBoard, actionNum, move, moveGen = [], promotionPieces = null) => {\n\n  moveGen = (moveGen.length <= 0) ? boardFuncs.moves(fillBoard, actionNum, false, false, false, promotionPieces) : moveGen;\n\n  for (let i = 0; i < moveGen.length; i++) {\n    if (this.compareMove(moveGen[i], move) == 0) return true;\n  }\n\n  return false;\n}\n\nexports.action = (fullBoard, actionNum, moves, variant = 'standard') => {\n  const newBoard = boardFuncs.copy(fullBoard);\n\n  for (const move of moves) {\n    if (!this.move(newBoard, actionNum, move, variant)) return false;\n\n    boardFuncs.move(newBoard, move);\n  }\n\n  if (boardFuncs.present(newBoard, actionNum).length > 0) return false;\n\n  return true;\n}\n\nexports.notation = (notation) => {\n  const regexRegular = notation.match(/^(\\d+[bw]\\.\\s)\\d+([\\-\\+]\\d+)?:[PBNRQK]?[a-h][1-8]((<([\\-\\+]\\d+)?>)+\\d*([\\-\\+]\\d+)?)?:x?[PBNRQ]?[a-h][1-8](e\\.p\\.)?[\\=\\+\\#]?/);\n  const regexCastling = notation.match(/^(\\d+[bw]\\.\\s)\\d+([\\-\\+]\\d+)?:0\\-0(\\-0)?[\\=\\+\\#]?/);\n\n  if (regexRegular == null && regexCastling == null) return false;\n  if (\n    (regexRegular != null && regexRegular[0] != notation) ||\n    (regexCastling != null && regexCastling[0] != notation)\n  ) return false;\n\n  return true;\n}\n\nexports.compareMove = (move1, move2) => {\n  if (!Array.isArray(move1) && Array.isArray(move2)) return 1;\n  if (!Array.isArray(move2)) return -1;\n\n  if (move1.length != move2.length) return move1.length - move2.length;\n\n  for (let i = 0; i < move1.length; i++) {\n    for (let j = 0; j < move1[i].length; j++) {\n\n      if (move1[i].length != move2[i].length) return move1[i].length - move2[i].length;\n\n      if (move1[i][j] == move2[i][j]) continue;\n\n      if (move1[i][j] == undefined) return -1;\n      if (move2[i][j] == undefined) return 1;\n\n      return move1[i][j] - move2[i][j];\n    }\n  }\n\n  return 0;\n}\n\n},{\"./board\":5}]},{},[10])(10)\n});\n","import Chess from '5d-chess-js';\n\nexport const extractHighlightNotation = (notationArr, notation, highlightNotation) => {\n  //Searching for last move and looking for notation string to highlight\n  try {\n    var chess = new Chess();\n    chess.skipDetection = true;\n    chess.import(highlightNotation);\n    var hash = chess.hash.slice();\n\n    //Check if highlight matches current displayed notation (skip if matches)\n    chess.import(notation);\n    if(hash !== chess.hash) {\n      var currTmpChess = chess.copy();\n      currTmpChess.reset();\n\n      //Create array of notation segments\n      var tmpNotationArr = [];\n      for(var i = 0;i < notationArr.length;i++) {\n        tmpNotationArr.push(notationArr[i].includes('[') ? notationArr[i] : notationArr[i].split(' '));\n      }\n      tmpNotationArr = tmpNotationArr.flat();\n\n      //Test notation segments to see if imported board hash matches\n      for(var i = 0;i < tmpNotationArr.length;i++) { // eslint-disable-line no-redeclare\n        var currTmpNotation = '';\n        for(var j = 0;j <= i;j++) {\n          currTmpNotation += tmpNotationArr[j] + (tmpNotationArr[j].includes('[') ? '\\n' : ' ');\n        }\n        try {\n          currTmpChess.import(currTmpNotation);\n          if(currTmpChess.hash === hash) {\n            return tmpNotationArr[i];\n          }\n        }\n        catch(err) {}\n      }\n    }\n  }\n  catch(err) {\n  }\n  return null;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;"],"sourceRoot":""}